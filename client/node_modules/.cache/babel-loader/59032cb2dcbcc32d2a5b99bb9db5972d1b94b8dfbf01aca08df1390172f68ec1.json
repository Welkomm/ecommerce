{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smiley\\\\Documents\\\\GitHub\\\\website_testing\\\\client\\\\src\\\\components\\\\ProtectedRoute.js\";\n// ProtectedRoute.js\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  isAdminRoute = false\n}) => {\n  const userInfo = JSON.parse(localStorage.getItem('userInfo'));\n  const isAuthenticated = Boolean(userInfo);\n  const isAdmin = isAuthenticated && userInfo.role === 'admin';\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Redirect admin users trying to access non-admin routes to the admin dashboard\n  if (isAdmin && !isAdminRoute) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Redirect non-admin users trying to access admin routes back to home\n  if (!isAdmin && isAdminRoute) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","jsxDEV","_jsxDEV","ProtectedRoute","isAdminRoute","userInfo","JSON","parse","localStorage","getItem","isAuthenticated","Boolean","isAdmin","role","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Smiley/Documents/GitHub/website_testing/client/src/components/ProtectedRoute.js"],"sourcesContent":["// ProtectedRoute.js\r\nimport React from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ isAdminRoute = false }) => {\r\n  const userInfo = JSON.parse(localStorage.getItem('userInfo'));\r\n  const isAuthenticated = Boolean(userInfo);\r\n  const isAdmin = isAuthenticated && userInfo.role === 'admin';\r\n\r\n  if (!isAuthenticated) {\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  // Redirect admin users trying to access non-admin routes to the admin dashboard\r\n  if (isAdmin && !isAdminRoute) {\r\n    return <Navigate to=\"/admin\" />;\r\n  }\r\n\r\n  // Redirect non-admin users trying to access admin routes back to home\r\n  if (!isAdmin && isAdminRoute) {\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n\r\n  return <Outlet />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,YAAY,GAAG;AAAM,CAAC,KAAK;EACnD,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;EAC7D,MAAMC,eAAe,GAAGC,OAAO,CAACN,QAAQ,CAAC;EACzC,MAAMO,OAAO,GAAGF,eAAe,IAAIL,QAAQ,CAACQ,IAAI,KAAK,OAAO;EAE5D,IAAI,CAACH,eAAe,EAAE;IACpB,oBAAOR,OAAA,CAACH,QAAQ;MAACe,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;;EAEA;EACA,IAAIN,OAAO,IAAI,CAACR,YAAY,EAAE;IAC5B,oBAAOF,OAAA,CAACH,QAAQ;MAACe,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;;EAEA;EACA,IAAI,CAACN,OAAO,IAAIR,YAAY,EAAE;IAC5B,oBAAOF,OAAA,CAACH,QAAQ;MAACe,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC5B;EAEA,oBAAOhB,OAAA,CAACF,MAAM;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAACC,EAAA,GApBIhB,cAAc;AAsBpB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}