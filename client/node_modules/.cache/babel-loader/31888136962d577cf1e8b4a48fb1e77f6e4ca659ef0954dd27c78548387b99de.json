{"ast":null,"code":"var _jsxFileName = \"/Users/saifalafeefi/Documents/GitHub/website_testing/client/src/components/ProductList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport SearchBar from './SearchBar'; // Ensure this path matches your file structure\nimport './ProductList.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProductList = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const [cartItems, setCartItems] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [rating, setRating] = useState(0);\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const searchQuery = queryParams.get('search');\n    const section = queryParams.get('section'); // Get the section parameter from the URL\n\n    const fetchAndFilterProducts = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/products');\n        const data = await response.json();\n        let fetchedProducts = Array.isArray(data) ? data : data.products || [];\n\n        // Filter by section if it's specified in the URL\n        if (section) {\n          fetchedProducts = fetchedProducts.filter(product => product.id.startsWith(section));\n        }\n\n        // Existing search filtering logic\n        if (searchQuery) {\n          const lowerCaseQuery = searchQuery.toLowerCase();\n          fetchedProducts = fetchedProducts.filter(product => product.id.toLowerCase().includes(lowerCaseQuery) || product.name.toLowerCase().includes(lowerCaseQuery) || product.description.toLowerCase().includes(lowerCaseQuery));\n        }\n        setProducts(fetchedProducts);\n        setFilteredProducts(fetchedProducts);\n      } catch (error) {\n        console.error(\"Error fetching products:\", error);\n      }\n    };\n    fetchAndFilterProducts();\n  }, [location.search]); // React to changes in search query and section\n\n  const handleSearch = query => {\n    // Navigate to the same page but with the new search query, replacing any existing query\n    navigate(`?search=${encodeURIComponent(query)}`);\n  };\n  const handleRatingChange = newRating => {\n    setRating(newRating);\n  };\n  const submitRating = async (productId, productName) => {\n    const username = localStorage.getItem(\"username\");\n    if (!username) {\n      alert(\"Please log in to submit a rating.\");\n      return;\n    }\n    if (rating === 0) {\n      alert(\"Please select a rating before submitting.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:3000/submitRating\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          productId,\n          productName,\n          rating\n        })\n      });\n      if (response.ok) {\n        alert(\"Rating submitted successfully!\");\n        setRating(0);\n\n        // Fetch the updated product data\n\n        const updatedProductsResponse = await fetch('http://localhost:3000/products');\n        const updatedProductsData = await updatedProductsResponse.json();\n        const updatedProducts = Array.isArray(updatedProductsData) ? updatedProductsData : updatedProductsData.products || [];\n        setProducts(updatedProducts);\n        setFilteredProducts(updatedProducts);\n        if (selectedProduct && selectedProduct.id === productId) {\n          const updatedSelectedProduct = updatedProducts.find(product => product.id === productId);\n          setSelectedProduct(updatedSelectedProduct);\n        }\n      } else {\n        alert(\"Failed to submit rating: \" + response.message);\n      }\n    } catch (error) {\n      console.error(\"Error submitting rating:\", error);\n      alert(\"An error occurred while submitting the rating: \" + error.message);\n    }\n  };\n  useEffect(() => {\n    fetchCartItems();\n  }, []);\n  const fetchCartItems = async () => {\n    const username = localStorage.getItem(\"username\");\n    if (username) {\n      try {\n        const response = await fetch(`http://localhost:3000/cart/${username}`);\n        const data = await response.json();\n        setCartItems(data);\n      } catch (error) {\n        console.error(\"Error fetching cart items:\", error);\n      }\n    }\n  };\n  const addItemToCart = async product => {\n    const username = localStorage.getItem(\"username\");\n    const response = await fetch(`http://localhost:3000/cart/${username}`);\n    if (!response.ok) {\n      alert('Failed to fetch cart items: ' + response.message);\n      return;\n    }\n    const cartItems = await response.json();\n\n    // Validate that cartItems is an array\n    if (!Array.isArray(cartItems)) {\n      console.error('Expected cartItems to be an array', cartItems);\n      alert('Error processing cart items');\n      return;\n    }\n    const existingItem = cartItems.find(item => item.id === product.id);\n    const quantityInCart = existingItem ? existingItem.quantity : 0;\n    if (quantityInCart + 1 > product.quantity) {\n      alert('Product is already in cart, check your cart for details.');\n      fetchCartItems(); // Fetch the updated cart items after the alert\n      navigate('/cart');\n      return;\n    }\n    const addToCartResponse = await fetch('http://localhost:3000/addToCart', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        item: {\n          ...product,\n          maxQuantity: product.quantity\n        }\n      })\n    });\n    if (!addToCartResponse.ok) {\n      alert('Failed to add item to cart');\n      return;\n    }\n    const data = await addToCartResponse.json();\n    if (data.success) {\n      alert('Item added to cart successfully');\n      fetchCartItems(); // Fetch the updated cart items after successful addition\n    } else {\n      alert('Failed to add item to cart: ' + data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-to-home-button\",\n        onClick: () => navigate('/'),\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: handleSearch,\n        placeholder: \"Search for items...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cart-button\",\n        onClick: () => navigate('/cart'),\n        children: \"Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), selectedProduct ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `/images/${selectedProduct.id}.jpg`,\n          alt: selectedProduct.name,\n          className: \"product-image-large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [selectedProduct.name, \" - \", selectedProduct.price, \" AED\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }, this), selectedProduct.quantity == 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"out-of-stock-message\",\n            children: \"OUT OF STOCK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedProduct.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Rate this product:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rating-stars\",\n              children: [...Array(5)].map((_, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `star ${rating >= index + 1 ? \"filled\" : \"\"}`,\n                onClick: () => handleRatingChange(index + 1),\n                children: \"\\u2605\"\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => submitRating(selectedProduct.id, selectedProduct.name),\n              children: \"Submit Rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"average-rating\",\n              children: [\"Average Rating: \", selectedProduct.averageRating ? selectedProduct.averageRating.toFixed(1) : 'N/A']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `add-to-cart-button ${selectedProduct.quantity == 0 ? 'disabled' : ''}`,\n            disabled: selectedProduct.quantity == 0 // This line disables the button functionally and visually\n            ,\n            onClick: () => {\n              if (selectedProduct.quantity > 0) {\n                addItemToCart({\n                  id: selectedProduct.id,\n                  title: selectedProduct.name,\n                  price: selectedProduct.price,\n                  quantity: 1\n                });\n              }\n            },\n            children: \"Add to Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"back-button\",\n            onClick: () => setSelectedProduct(null),\n            children: \"Back to Products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"similar-products-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Similar Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"similar-products\",\n          children: products.filter(product => product.id.startsWith(selectedProduct.id.slice(0, selectedProduct.id.lastIndexOf(\"-\"))) && product.id !== selectedProduct.id).map(similarProduct => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"similar-product-item\",\n            onClick: () => {\n              setSelectedProduct(similarProduct);\n              window.scrollTo(0, 0); // Scroll to the top of the page\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `/images/${similarProduct.id}.jpg`,\n              alt: similarProduct.name,\n              className: \"similar-product-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [similarProduct.name, \" - \", similarProduct.price, \" AED\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 37\n            }, this)]\n          }, similarProduct.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"products-grid\",\n        children: filteredProducts.map((product, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/images/${product.id}.jpg`,\n            alt: product.name,\n            className: \"product-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 33\n          }, this), product.quantity == 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"out-of-stock-message\",\n            children: \"OUT OF STOCK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"product-title\",\n            children: [product.name, \" - \", product.price, \" AED\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: product.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"average-rating\",\n            children: [\"Average Rating: \", product.averageRating ? product.averageRating.toFixed(1) : 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"view-details-button\",\n            onClick: () => setSelectedProduct(product),\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `add-to-cart-button ${product.quantity == 0 ? 'disabled' : ''}`,\n            disabled: product.quantity == 0,\n            onClick: () => {\n              if (product.quantity > 0) {\n                addItemToCart({\n                  id: product.id,\n                  title: product.name,\n                  price: product.price,\n                  quantity: 1\n                });\n              }\n            },\n            children: \"Add to Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductList, \"eMuC8zDL2uFsW9NuI5TIkcG50RI=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","SearchBar","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductList","_s","products","setProducts","filteredProducts","setFilteredProducts","selectedProduct","setSelectedProduct","cartItems","setCartItems","navigate","location","rating","setRating","queryParams","URLSearchParams","search","searchQuery","get","section","fetchAndFilterProducts","response","fetch","data","json","fetchedProducts","Array","isArray","filter","product","id","startsWith","lowerCaseQuery","toLowerCase","includes","name","description","error","console","handleSearch","query","encodeURIComponent","handleRatingChange","newRating","submitRating","productId","productName","username","localStorage","getItem","alert","method","headers","body","JSON","stringify","ok","updatedProductsResponse","updatedProductsData","updatedProducts","updatedSelectedProduct","find","message","fetchCartItems","addItemToCart","existingItem","item","quantityInCart","quantity","addToCartResponse","maxQuantity","success","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","placeholder","src","alt","price","map","_","index","averageRating","toFixed","disabled","title","slice","lastIndexOf","similarProduct","window","scrollTo","_c","$RefreshReg$"],"sources":["/Users/saifalafeefi/Documents/GitHub/website_testing/client/src/components/ProductList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport SearchBar from './SearchBar'; // Ensure this path matches your file structure\nimport './ProductList.css';\n\nconst ProductList = () => {\n    const [products, setProducts] = useState([]);\n    const [filteredProducts, setFilteredProducts] = useState([]);\n    const [selectedProduct, setSelectedProduct] = useState(null);\n    const [cartItems, setCartItems] = useState([]);\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const [rating, setRating] = useState(0);\n\n    useEffect(() => {\n        const queryParams = new URLSearchParams(location.search);\n        const searchQuery = queryParams.get('search');\n        const section = queryParams.get('section'); // Get the section parameter from the URL\n\n        const fetchAndFilterProducts = async () => {\n            try {\n                const response = await fetch('http://localhost:3000/products');\n                const data = await response.json();\n                let fetchedProducts = Array.isArray(data) ? data : data.products || [];\n\n                // Filter by section if it's specified in the URL\n                if (section) {\n                    fetchedProducts = fetchedProducts.filter(product => product.id.startsWith(section));\n                }\n\n                // Existing search filtering logic\n                if (searchQuery) {\n                    const lowerCaseQuery = searchQuery.toLowerCase();\n                    fetchedProducts = fetchedProducts.filter(product =>\n                        product.id.toLowerCase().includes(lowerCaseQuery) ||\n                        product.name.toLowerCase().includes(lowerCaseQuery) ||\n                        product.description.toLowerCase().includes(lowerCaseQuery)\n                    );\n                }\n\n                setProducts(fetchedProducts);\n                setFilteredProducts(fetchedProducts);\n            } catch (error) {\n                console.error(\"Error fetching products:\", error);\n            }\n        };\n\n        fetchAndFilterProducts();\n    }, [location.search]); // React to changes in search query and section\n\n    const handleSearch = (query) => {\n        // Navigate to the same page but with the new search query, replacing any existing query\n        navigate(`?search=${encodeURIComponent(query)}`);\n    };\n\n    const handleRatingChange = (newRating) => {\n        setRating(newRating);\n    };\n\n    const submitRating = async (productId, productName) => {\n        const username = localStorage.getItem(\"username\");\n        if (!username) {\n            alert(\"Please log in to submit a rating.\");\n            return;\n        }\n\n        if (rating === 0) {\n            alert(\"Please select a rating before submitting.\");\n            return;\n        }\n\n        try {\n            const response = await fetch(\"http://localhost:3000/submitRating\", {\n                method: \"POST\",\n                headers: {\n                \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({ username, productId, productName, rating }),\n            });\n\n            if (response.ok) {\n                alert(\"Rating submitted successfully!\");\n                setRating(0);\n\n                // Fetch the updated product data\n\n                const updatedProductsResponse = await fetch('http://localhost:3000/products');\n                const updatedProductsData = await updatedProductsResponse.json();\n                const updatedProducts = Array.isArray(updatedProductsData) ? updatedProductsData : updatedProductsData.products || [];\n\n                setProducts(updatedProducts);\n                setFilteredProducts(updatedProducts);\n\n                if (selectedProduct && selectedProduct.id === productId) {\n                    const updatedSelectedProduct = updatedProducts.find(product => product.id === productId);\n                    setSelectedProduct(updatedSelectedProduct);\n                }\n            } else {\n                alert(\"Failed to submit rating: \" + response.message);\n            }\n        } catch (error) {\n            console.error(\"Error submitting rating:\", error);\n            alert(\"An error occurred while submitting the rating: \" + error.message);\n        }\n    };\n\n    useEffect(() => {\n        fetchCartItems();\n    }, []);\n\n    const fetchCartItems = async () => {\n        const username = localStorage.getItem(\"username\");\n        if (username) {\n            try {\n                const response = await fetch(`http://localhost:3000/cart/${username}`);\n                const data = await response.json();\n                setCartItems(data);\n            } catch (error) {\n                console.error(\"Error fetching cart items:\", error);\n            }\n        }\n    };\n\n    const addItemToCart = async (product) => {\n        const username = localStorage.getItem(\"username\");\n        const response = await fetch(`http://localhost:3000/cart/${username}`);\n    \n        if (!response.ok) {\n            alert('Failed to fetch cart items: ' + response.message);\n            return;\n        }\n    \n        const cartItems = await response.json();\n    \n        // Validate that cartItems is an array\n        if (!Array.isArray(cartItems)) {\n            console.error('Expected cartItems to be an array', cartItems);\n            alert('Error processing cart items');\n            return;\n        }\n    \n        const existingItem = cartItems.find(item => item.id === product.id);\n        const quantityInCart = existingItem ? existingItem.quantity : 0;\n    \n        if (quantityInCart + 1 > product.quantity) {\n            alert('Product is already in cart, check your cart for details.');\n            fetchCartItems(); // Fetch the updated cart items after the alert\n            navigate('/cart');\n            return;\n        }\n    \n        const addToCartResponse = await fetch('http://localhost:3000/addToCart', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ username, item: { ...product, maxQuantity: product.quantity } }),\n        });\n    \n        if (!addToCartResponse.ok) {\n            alert('Failed to add item to cart');\n            return;\n        }\n    \n        const data = await addToCartResponse.json();\n        if (data.success) {\n            alert('Item added to cart successfully');\n            fetchCartItems(); // Fetch the updated cart items after successful addition\n        } else {\n            alert('Failed to add item to cart: ' + data.message);\n        }\n    };\n\n    return (\n        <div className=\"product-list-container\">\n            <div className=\"search-bar-container\">\n                <button \n                    className=\"back-to-home-button\" \n                    onClick={() => navigate('/')}\n                >\n                    Back to Home\n                </button>\n                    <SearchBar onSearch={handleSearch} placeholder=\"Search for items...\" />\n                <button \n                    className=\"cart-button\" \n                    onClick={() => navigate('/cart')}\n                >\n                    Cart\n            </button>\n            </div>\n            {selectedProduct ? (\n                <>\n                    <div className=\"product-details\">\n                        <img src={`/images/${selectedProduct.id}.jpg`} alt={selectedProduct.name} className=\"product-image-large\" />\n                        <div className=\"product-info\">\n                            <h2>{selectedProduct.name} - {selectedProduct.price} AED</h2>\n                            {selectedProduct.quantity == 0 && (\n                                <p className=\"out-of-stock-message\">OUT OF STOCK</p>\n                            )}\n                            <p>{selectedProduct.description}</p>\n                            <div className=\"rating-container\">\n                                <span>Rate this product:</span>\n                                <div className=\"rating-stars\">\n                                    {[...Array(5)].map((_, index) => (\n                                        <span\n                                            key={index}\n                                            className={`star ${rating >= index + 1 ? \"filled\" : \"\"}`}\n                                            onClick={() => handleRatingChange(index + 1)}\n                                        >\n                                            &#9733;\n                                        </span>\n                                    ))}\n                                </div>\n                                <button onClick={() => submitRating(selectedProduct.id, selectedProduct.name)}>\n                                    Submit Rating\n                                </button>\n                                <div className=\"average-rating\">\n                                Average Rating: {selectedProduct.averageRating ? selectedProduct.averageRating.toFixed(1) : 'N/A'}\n                                </div>\n                            </div>\n                            <button \n                                className={`add-to-cart-button ${selectedProduct.quantity == 0 ? 'disabled' : ''}`}\n                                disabled={selectedProduct.quantity == 0} // This line disables the button functionally and visually\n                                onClick={() => {\n                                    if (selectedProduct.quantity > 0) {\n                                        addItemToCart({\n                                            id: selectedProduct.id,\n                                            title: selectedProduct.name,\n                                            price: selectedProduct.price,\n                                            quantity: 1\n                                        });\n                                    }\n                                }}\n                            >\n                                Add to Cart\n                            </button>\n                            <button className=\"back-button\" onClick={() => setSelectedProduct(null)}>Back to Products</button>\n                        </div>\n                    </div>\n                    <div className=\"similar-products-container\">\n                        <h3>Similar Products</h3>\n                        <div className=\"similar-products\">\n                            {products.filter(product => \n                                product.id.startsWith(selectedProduct.id.slice(0, selectedProduct.id.lastIndexOf(\"-\")))\n                                && product.id !== selectedProduct.id\n                            )\n                            .map(similarProduct => (\n                                <div \n                                    key={similarProduct.id} \n                                    className=\"similar-product-item\" \n                                    onClick={() => {\n                                        setSelectedProduct(similarProduct);\n                                        window.scrollTo(0, 0); // Scroll to the top of the page\n                                    }}\n                                >\n                                    <img src={`/images/${similarProduct.id}.jpg`} alt={similarProduct.name} className=\"similar-product-image\" />\n                                    <div>{similarProduct.name} - {similarProduct.price} AED</div>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                </>\n            ) : (\n                <>\n                    <h1>Products</h1>\n                    <div className=\"products-grid\">\n                        {filteredProducts.map((product, index) => (\n                            <div key={index} className=\"product-item\">\n                                <img src={`/images/${product.id}.jpg`} alt={product.name} className=\"product-image\" />\n                                {product.quantity == 0 && (\n                                    <p className=\"out-of-stock-message\">OUT OF STOCK</p>\n                                )}\n                                <h2 className=\"product-title\">{product.name} - {product.price} AED</h2>\n                                <p>{product.description}</p>\n                                <div className=\"average-rating\">\n                                    Average Rating: {product.averageRating ? product.averageRating.toFixed(1) : 'N/A'}\n                                </div>\n                                <button \n                                    className=\"view-details-button\" \n                                    onClick={() => setSelectedProduct(product)}\n                                >\n                                    View Details\n                                </button>\n                                <button \n                                    className={`add-to-cart-button ${product.quantity == 0 ? 'disabled' : ''}`}\n                                    disabled={product.quantity == 0}\n                                    onClick={() => {\n                                        if (product.quantity > 0) {\n                                            addItemToCart({\n                                                id: product.id,\n                                                title: product.name,\n                                                price: product.price,\n                                                quantity: 1\n                                            });\n                                        }\n                                    }}\n                                >\n                                    Add to Cart\n                                </button>\n                            </div>\n                        ))}\n                    </div>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default ProductList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}