{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smiley\\\\Documents\\\\GitHub\\\\website_testing\\\\client\\\\src\\\\components\\\\Orders.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Orders.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Orders = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    // Fetch products once and store them\n    const fetchProducts = async () => {\n      try {\n        const response = await fetch(`http://localhost:3000/api/products`);\n        const data = await response.json();\n        setProducts(data.products); // Assuming the response has a 'products' key\n      } catch (error) {\n        console.error(\"Error fetching products:\", error);\n      }\n    };\n    fetchProducts();\n  }, []);\n  useEffect(() => {\n    const fetchOrders = async () => {\n      const username = localStorage.getItem(\"username\");\n      if (username) {\n        try {\n          const response = await fetch(`http://localhost:3000/orders/${username}`);\n          const data = await response.json();\n          if (data.orders && Array.isArray(data.orders)) {\n            // Enhance orders with product names\n            const enhancedOrders = data.orders.map(order => ({\n              ...order,\n              products: order.products.map(productId => {\n                const product = products.find(p => p.id === productId);\n                return {\n                  id: productId,\n                  name: product ? product.name : 'Unknown Product'\n                };\n              })\n            }));\n            setOrders(enhancedOrders);\n          } else {\n            console.error(\"Unexpected response format:\", data);\n            setOrders([]);\n          }\n        } catch (error) {\n          console.error(\"Error fetching orders:\", error);\n          setOrders([]);\n        }\n      }\n    };\n    if (products.length > 0) {\n      fetchOrders();\n    }\n  }, [products]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"orders-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), orders.length > 0 ? orders.map((order, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Order ID: \", order.orderID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Order Date: \", order.orderDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", order.orderStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Products:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: order.products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/products?search=${product.id}`,\n            children: [product.name, \" (\", product.id, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 37\n          }, this)\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No orders found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(Orders, \"z0wFV7UoaOiL3+0Fw1MBBbsjRcA=\");\n_c = Orders;\nexport default Orders;\nvar _c;\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Orders","_s","orders","setOrders","products","setProducts","fetchProducts","response","fetch","data","json","error","console","fetchOrders","username","localStorage","getItem","Array","isArray","enhancedOrders","map","order","productId","product","find","p","id","name","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","orderID","orderDate","orderStatus","to","_c","$RefreshReg$"],"sources":["C:/Users/Smiley/Documents/GitHub/website_testing/client/src/components/Orders.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Orders.css';\n\nconst Orders = () => {\n    const [orders, setOrders] = useState([]);\n    const [products, setProducts] = useState([]);\n\n    useEffect(() => {\n        // Fetch products once and store them\n        const fetchProducts = async () => {\n            try {\n                const response = await fetch(`http://localhost:3000/api/products`);\n                const data = await response.json();\n                setProducts(data.products); // Assuming the response has a 'products' key\n            } catch (error) {\n                console.error(\"Error fetching products:\", error);\n            }\n        };\n\n        fetchProducts();\n    }, []);\n\n    useEffect(() => {\n        const fetchOrders = async () => {\n            const username = localStorage.getItem(\"username\");\n            if (username) {\n                try {\n                    const response = await fetch(`http://localhost:3000/orders/${username}`);\n                    const data = await response.json();\n                    if (data.orders && Array.isArray(data.orders)) {\n                        // Enhance orders with product names\n                        const enhancedOrders = data.orders.map(order => ({\n                            ...order,\n                            products: order.products.map(productId => {\n                                const product = products.find(p => p.id === productId);\n                                return { id: productId, name: product ? product.name : 'Unknown Product' };\n                            })\n                        }));\n                        setOrders(enhancedOrders);\n                    } else {\n                        console.error(\"Unexpected response format:\", data);\n                        setOrders([]);\n                    }\n                } catch (error) {\n                    console.error(\"Error fetching orders:\", error);\n                    setOrders([]);\n                }\n            }\n        };\n\n        if (products.length > 0) {\n            fetchOrders();\n        }\n    }, [products]);\n\n    return (\n        <div className=\"orders-container\">\n            <h1>Your Orders</h1>\n            {orders.length > 0 ? (\n                orders.map((order, index) => (\n                    <div key={index} className=\"order-item\">\n                        <h2>Order ID: {order.orderID}</h2>\n                        <p>Order Date: {order.orderDate}</p>\n                        <p>Status: {order.orderStatus}</p>\n                        <p>Products:</p>\n                        <ul>\n                            {order.products.map(product => (\n                                <li key={product.id}>\n                                    <Link to={`/products?search=${product.id}`}>{product.name} ({product.id})</Link>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                ))\n            ) : (\n                <p>No orders found.</p>\n            )}\n        </div>\n    );\n};\n\nexport default Orders;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}