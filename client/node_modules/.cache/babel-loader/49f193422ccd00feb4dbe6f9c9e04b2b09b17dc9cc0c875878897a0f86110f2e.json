{"ast":null,"code":"var _jsxFileName = \"/Users/saifalafeefi/Desktop/react js testing/website_testing/client/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate(); // Use useNavigate here\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        navigate('/home'); // Use navigate function to redirect\n      } else {\n        alert('Invalid credentials');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      alert('Login failed');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      placeholder: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"IIPwWddbiEHHD7aoL5eQeOR7fTk=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","alert","error","console","onSubmit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saifalafeefi/Desktop/react js testing/website_testing/client/src/components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Login = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate(); // Use useNavigate here\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3000/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password }),\n      });\n      if (response.ok) {\n        navigate('/home'); // Use navigate function to redirect\n      } else {\n        alert('Invalid credentials');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      alert('Login failed');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)} placeholder=\"Username\" />\n      <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Password\" />\n      <button type=\"submit\">Login</button>\n    </form>\n  );\n};\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEd,QAAQ;UAAEE;QAAS,CAAC;MAC7C,CAAC,CAAC;MACF,IAAIM,QAAQ,CAACO,EAAE,EAAE;QACfX,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;MACrB,CAAC,MAAM;QACLY,KAAK,CAAC,qBAAqB,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpCD,KAAK,CAAC,cAAc,CAAC;IACvB;EACF,CAAC;EAED,oBACEnB,OAAA;IAAMsB,QAAQ,EAAEd,YAAa;IAAAe,QAAA,gBAC3BvB,OAAA;MAAOwB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEtB,QAAS;MAACuB,QAAQ,EAAEjB,CAAC,IAAIL,WAAW,CAACK,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzGhC,OAAA;MAAOwB,IAAI,EAAC,UAAU;MAACC,KAAK,EAAEpB,QAAS;MAACqB,QAAQ,EAAEjB,CAAC,IAAIH,WAAW,CAACG,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7GhC,OAAA;MAAQwB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEX,CAAC;AAAC9B,EAAA,CA/BID,KAAK;EAAA,QAGQH,WAAW;AAAA;AAAAmC,EAAA,GAHxBhC,KAAK;AAiCX,eAAeA,KAAK;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}