{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smiley\\\\Documents\\\\GitHub\\\\website_testing\\\\client\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AdminDashboard.css'; // Ensure this path matches your CSS file's location\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [displaySection, setDisplaySection] = useState('');\n  const [users, setUsers] = useState([]);\n  const [selectedUser, setSelectedUser] = useState(null);\n\n  // Function to fetch users from the backend\n  const fetchUsers = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/users');\n      const data = await response.json();\n      if (data.success) {\n        setUsers(data.users);\n      } else {\n        alert('Failed to fetch users');\n      }\n    } catch (error) {\n      console.error(\"Error fetching users:\", error);\n      alert('Failed to fetch users');\n    }\n  };\n  useEffect(() => {\n    if (displaySection === 'users') {\n      fetchUsers();\n    }\n  }, [displaySection]);\n  const handleDisplaySection = section => {\n    setDisplaySection(section);\n    setSelectedUser(null); // Reset selected user when changing sections\n  };\n  const handleSelectUser = user => {\n    setSelectedUser(user); // Set the selected user to display details\n  };\n  const handleSignOut = () => {\n    localStorage.clear();\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDisplaySection('products'),\n        className: \"admin-button\",\n        children: \"Manage Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDisplaySection('users'),\n        className: \"admin-button\",\n        children: \"Manage Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDisplaySection('orders'),\n        className: \"admin-button\",\n        children: \"Manage Orders\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDisplaySection('analytics'),\n        className: \"admin-button\",\n        children: \"View Analytics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSignOut,\n        className: \"admin-sign-out-button\",\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-content\",\n      children: displaySection === 'users' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-list\",\n          children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-item\",\n            children: [user.username, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSelectUser(user),\n              className: \"details-button\",\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), selectedUser && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Username: \", selectedUser.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Email: \", selectedUser.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Phone Number: \", selectedUser.phoneNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"First Name: \", selectedUser.firstName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last Name: \", selectedUser.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"qKqlqE4mgLSfwj6nZvkhpFZV/qA=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminDashboard","_s","navigate","displaySection","setDisplaySection","users","setUsers","selectedUser","setSelectedUser","fetchUsers","response","fetch","data","json","success","alert","error","console","handleDisplaySection","section","handleSelectUser","user","handleSignOut","localStorage","clear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","index","username","email","phoneNumber","firstName","lastName","_c","$RefreshReg$"],"sources":["C:/Users/Smiley/Documents/GitHub/website_testing/client/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './AdminDashboard.css'; // Ensure this path matches your CSS file's location\r\n\r\nconst AdminDashboard = () => {\r\n  const navigate = useNavigate();\r\n  const [displaySection, setDisplaySection] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [selectedUser, setSelectedUser] = useState(null);\r\n\r\n  // Function to fetch users from the backend\r\n  const fetchUsers = async () => {\r\n    try {\r\n        const response = await fetch('http://localhost:3000/users');\r\n        const data = await response.json();\r\n        if (data.success) {\r\n            setUsers(data.users);\r\n        } else {\r\n            alert('Failed to fetch users');\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error fetching users:\", error);\r\n        alert('Failed to fetch users');\r\n    }\r\n};\r\n\r\n  useEffect(() => {\r\n    if (displaySection === 'users') {\r\n      fetchUsers();\r\n    }\r\n  }, [displaySection]);\r\n\r\n  const handleDisplaySection = (section) => {\r\n    setDisplaySection(section);\r\n    setSelectedUser(null); // Reset selected user when changing sections\r\n  };\r\n\r\n  const handleSelectUser = (user) => {\r\n    setSelectedUser(user); // Set the selected user to display details\r\n  };\r\n\r\n  const handleSignOut = () => {\r\n    localStorage.clear();\r\n    navigate('/login');\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      <h1>Admin Dashboard</h1>\r\n      <div className=\"admin-buttons\">\r\n        <button onClick={() => handleDisplaySection('products')} className=\"admin-button\">Manage Products</button>\r\n        <button onClick={() => handleDisplaySection('users')} className=\"admin-button\">Manage Users</button>\r\n        <button onClick={() => handleDisplaySection('orders')} className=\"admin-button\">Manage Orders</button>\r\n        <button onClick={() => handleDisplaySection('analytics')} className=\"admin-button\">View Analytics</button>\r\n        <button onClick={handleSignOut} className=\"admin-sign-out-button\">Sign Out</button>\r\n      </div>\r\n      <div className=\"admin-content\">\r\n        {displaySection === 'users' && (\r\n          <>\r\n            <div className=\"user-list\">\r\n              {users.map((user, index) => (\r\n                <div key={index} className=\"user-item\">\r\n                  {user.username}\r\n                  <button onClick={() => handleSelectUser(user)} className=\"details-button\">Details</button>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            {selectedUser && (\r\n              <div className=\"user-details\">\r\n                <p>Username: {selectedUser.username}</p>\r\n                <p>Email: {selectedUser.email}</p>\r\n                <p>Phone Number: {selectedUser.phoneNumber}</p>\r\n                <p>First Name: {selectedUser.firstName}</p>\r\n                <p>Last Name: {selectedUser.lastName}</p>\r\n              </div>\r\n            )}\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}