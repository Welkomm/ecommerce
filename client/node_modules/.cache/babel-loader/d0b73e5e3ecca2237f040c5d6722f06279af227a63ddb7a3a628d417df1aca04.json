{"ast":null,"code":"var _jsxFileName = \"/Users/saifalafeefi/Documents/GitHub/website_testing/client/src/components/ResetPassword.js\",\n  _s = $RefreshSig$();\n// ResetPassword.js\nimport React, { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './ResetPasswordAndForgotPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const navigate = useNavigate();\n  const {\n    token\n  } = useParams();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (newPassword !== confirmPassword) {\n      alert(\"Passwords do not match.\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:3000/reset-password/${token}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          newPassword\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert('Password reset successful.');\n        navigate('/login');\n      } else {\n        alert(data.message);\n      }\n    } catch (error) {\n      console.error(\"An error occurred during password reset:\", error);\n      alert(\"An error occurred during password reset: \" + error.message);\n    }\n  };\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: `/images/UAE_Traditional_Mart.png`,\n      alt: \"Banner\",\n      className: \"home-banner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"reset-password-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"password-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: showPassword ? 'text' : 'password',\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          placeholder: \"New Password\",\n          required: true,\n          className: \"reset-password-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: togglePasswordVisibility,\n          className: \"show-password-button\",\n          children: [showPassword ? 'Hide' : 'Show', \" Password\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        placeholder: \"Confirm Password\",\n        required: true,\n        className: \"reset-password-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"reset-password-button\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPassword, \"8JUm4/J95hiTxJJL09pEZUOrckY=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useNavigate","useParams","jsxDEV","_jsxDEV","ResetPassword","_s","newPassword","setNewPassword","confirmPassword","setConfirmPassword","showPassword","setShowPassword","navigate","token","handleSubmit","e","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","data","json","success","message","error","console","togglePasswordVisibility","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","onClick","_c","$RefreshReg$"],"sources":["/Users/saifalafeefi/Documents/GitHub/website_testing/client/src/components/ResetPassword.js"],"sourcesContent":["// ResetPassword.js\nimport React, { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './ResetPasswordAndForgotPassword.css';\n\nconst ResetPassword = () => {\n    const [newPassword, setNewPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [showPassword, setShowPassword] = useState(false);\n    const navigate = useNavigate();\n    const { token } = useParams();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (newPassword !== confirmPassword) {\n        alert(\"Passwords do not match.\");\n        return;\n        }\n        try {\n        const response = await fetch(`http://localhost:3000/reset-password/${token}`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ newPassword }),\n        });\n        const data = await response.json();\n        if (data.success) {\n            alert('Password reset successful.');\n            navigate('/login');\n        } else {\n            alert(data.message);\n        }\n        } catch (error) {\n        console.error(\"An error occurred during password reset:\", error);\n        alert(\"An error occurred during password reset: \" + error.message);\n        }\n    };\n\n    const togglePasswordVisibility = () => {\n        setShowPassword(!showPassword);\n    };\n\n    return (\n        <div className=\"reset-password-container\">\n            <img src={`/images/UAE_Traditional_Mart.png`} alt=\"Banner\" className=\"home-banner\" />\n            <h1>Reset Password</h1>\n            <form onSubmit={handleSubmit} className=\"reset-password-form\">\n                <div className=\"password-input-container\">\n                <input\n                    type={showPassword ? 'text' : 'password'}\n                    value={newPassword}\n                    onChange={(e) => setNewPassword(e.target.value)}\n                    placeholder=\"New Password\"\n                    required\n                    className=\"reset-password-input\"\n                />\n                <button\n                    type=\"button\"\n                    onClick={togglePasswordVisibility}\n                    className=\"show-password-button\"\n                >\n                    {showPassword ? 'Hide' : 'Show'} Password\n                </button>\n                </div>\n                <input\n                type=\"password\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                placeholder=\"Confirm Password\"\n                required\n                className=\"reset-password-input\"\n                />\n                <button type=\"submit\" className=\"reset-password-button\">\n                    Reset Password\n                </button>\n            </form>\n        </div>\n    );\n};\n\nexport default ResetPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}