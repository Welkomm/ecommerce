{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smiley\\\\Documents\\\\GitHub\\\\website_testing\\\\client\\\\src\\\\components\\\\SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport './SearchBar.css'; // Assuming you'll create a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = ({\n  onSearch\n}) => {\n  _s();\n  const [query, setQuery] = useState('');\n  const navigate = useNavigate(); // Initialize useNavigate\n\n  const handleInputChange = e => {\n    setQuery(e.target.value);\n    console.log(\"Updated Query:\", e.target.value);\n    // Optionally, you can call onSearch here if you want to search as the user types\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(\"Submitting Query:\", query);\n    // Update the URL with the search query without navigating away\n    navigate(`/products?search=${encodeURIComponent(query)}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"search-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: handleInputChange,\n      placeholder: \"Search for items...\",\n      className: \"search-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"search-button\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchBar, \"4dav8M2SLGXQnIi3dGQyN/4cmLs=\", false, function () {\n  return [useNavigate];\n});\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","SearchBar","onSearch","_s","query","setQuery","navigate","handleInputChange","e","target","value","console","log","handleSubmit","preventDefault","encodeURIComponent","onSubmit","className","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Smiley/Documents/GitHub/website_testing/client/src/components/SearchBar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\r\nimport './SearchBar.css'; // Assuming you'll create a CSS file for styling\r\n\r\nconst SearchBar = ({ onSearch }) => {\r\n    const [query, setQuery] = useState('');\r\n    const navigate = useNavigate(); // Initialize useNavigate\r\n\r\n    const handleInputChange = (e) => {\r\n        setQuery(e.target.value);\r\n        console.log(\"Updated Query:\", e.target.value);\r\n        // Optionally, you can call onSearch here if you want to search as the user types\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"Submitting Query:\", query);\r\n        // Update the URL with the search query without navigating away\r\n        navigate(`/products?search=${encodeURIComponent(query)}`);\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"search-bar\">\r\n            <input\r\n                type=\"text\"\r\n                value={query}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Search for items...\"\r\n                className=\"search-input\"\r\n            />\r\n            <button type=\"submit\" className=\"search-button\">Search</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SearchBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMS,iBAAiB,GAAIC,CAAC,IAAK;IAC7BH,QAAQ,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACxBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC7C;EACJ,CAAC;EAED,MAAMG,YAAY,GAAIL,CAAC,IAAK;IACxBA,CAAC,CAACM,cAAc,CAAC,CAAC;IAClBH,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAER,KAAK,CAAC;IACvC;IACAE,QAAQ,CAAE,oBAAmBS,kBAAkB,CAACX,KAAK,CAAE,EAAC,CAAC;EAC7D,CAAC;EAED,oBACIJ,OAAA;IAAMgB,QAAQ,EAAEH,YAAa;IAACI,SAAS,EAAC,YAAY;IAAAC,QAAA,gBAChDlB,OAAA;MACImB,IAAI,EAAC,MAAM;MACXT,KAAK,EAAEN,KAAM;MACbgB,QAAQ,EAAEb,iBAAkB;MAC5Bc,WAAW,EAAC,qBAAqB;MACjCJ,SAAS,EAAC;IAAc;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACFzB,OAAA;MAAQmB,IAAI,EAAC,QAAQ;MAACF,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEf,CAAC;AAACtB,EAAA,CA7BIF,SAAS;EAAA,QAEMH,WAAW;AAAA;AAAA4B,EAAA,GAF1BzB,SAAS;AA+Bf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}