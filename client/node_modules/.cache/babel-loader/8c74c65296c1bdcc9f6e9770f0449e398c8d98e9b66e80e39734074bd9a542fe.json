{"ast":null,"code":"var _jsxFileName = \"/Users/saifalafeefi/Documents/GitHub/website_testing/client/src/components/ProductList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport './ProductList.css'; // Adjust the path according to your file structure\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProductList = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const navigate = useNavigate(); // Use the useNavigate hook here\n\n  // Fetch products from the server\n  useEffect(() => {\n    fetch('http://localhost:3000/products').then(response => response.json()).then(data => {\n      // Check if 'data' is an array before setting it to the state\n      if (Array.isArray(data)) {\n        setProducts(data);\n      } else if (Array.isArray(data.products)) {\n        // If 'data' contains a 'products' field that is an array, use that instead\n        setProducts(data.products);\n      } else {\n        // Handle cases where 'data' is not in the expected format\n        console.error(\"Fetched data is not an array:\", data);\n        setProducts([]); // Set products to an empty array to avoid runtime errors\n      }\n    }).catch(error => {\n      console.error(\"Error fetching products:\", error);\n      setProducts([]); // Set products to an empty array in case of fetch error\n    });\n  }, []);\n\n  // Function to add an item to the cart\n  const addItemToCart = async item => {\n    const username = localStorage.getItem(\"username\"); // Retrieve the username from localStorage\n    const response = await fetch('http://localhost:3000/addToCart', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        item\n      })\n    });\n    const data = await response.json();\n    if (data.success) {\n      alert('Item added to cart successfully');\n    } else {\n      alert('Failed to add item to cart');\n    }\n  };\n  const renderProductDetails = product => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [product.name, \" - $\", product.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: product.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Quantity: \", product.quantity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-to-cart-button\",\n        onClick: () => addItemToCart({\n          id: product.id,\n          title: product.name,\n          price: product.price,\n          quantity: 1 // Assuming a default quantity\n        }),\n        children: \"Add to Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => setSelectedProduct(null),\n        children: \"Back to Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-list-container\",\n    children: selectedProduct ? renderProductDetails(selectedProduct) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: products.map((product, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"product-title\",\n            children: [product.name, \" - $\", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: product.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"view-details-button\",\n            onClick: () => setSelectedProduct(product),\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"add-to-cart-button\",\n            onClick: () => addItemToCart({\n              id: product.id,\n              title: product.name,\n              price: product.price,\n              quantity: 1\n            }),\n            children: \"Add to Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-to-home-button\",\n        onClick: () => navigate('/') // Use navigate function here\n        ,\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductList, \"+TyZqK3afwcQDlyQ4k367C+l38Q=\", false, function () {\n  return [useNavigate];\n});\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductList","_s","products","setProducts","selectedProduct","setSelectedProduct","navigate","fetch","then","response","json","data","Array","isArray","console","error","catch","addItemToCart","item","username","localStorage","getItem","method","headers","body","JSON","stringify","success","alert","renderProductDetails","product","className","children","name","price","fileName","_jsxFileName","lineNumber","columnNumber","description","quantity","onClick","id","title","map","index","_c","$RefreshReg$"],"sources":["/Users/saifalafeefi/Documents/GitHub/website_testing/client/src/components/ProductList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport './ProductList.css'; // Adjust the path according to your file structure\n\nconst ProductList = () => {\n    const [products, setProducts] = useState([]);\n    const [selectedProduct, setSelectedProduct] = useState(null);\n    const navigate = useNavigate(); // Use the useNavigate hook here\n\n    // Fetch products from the server\n    useEffect(() => {\n        fetch('http://localhost:3000/products')\n            .then(response => response.json())\n            .then(data => {\n                // Check if 'data' is an array before setting it to the state\n                if (Array.isArray(data)) {\n                    setProducts(data);\n                } else if (Array.isArray(data.products)) {\n                    // If 'data' contains a 'products' field that is an array, use that instead\n                    setProducts(data.products);\n                } else {\n                    // Handle cases where 'data' is not in the expected format\n                    console.error(\"Fetched data is not an array:\", data);\n                    setProducts([]); // Set products to an empty array to avoid runtime errors\n                }\n            })\n            .catch(error => {\n                console.error(\"Error fetching products:\", error);\n                setProducts([]); // Set products to an empty array in case of fetch error\n            });\n    }, []);\n\n    // Function to add an item to the cart\n    const addItemToCart = async (item) => {\n        const username = localStorage.getItem(\"username\"); // Retrieve the username from localStorage\n        const response = await fetch('http://localhost:3000/addToCart', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ username, item }),\n        });\n        const data = await response.json();\n        if (data.success) {\n            alert('Item added to cart successfully');\n        } else {\n            alert('Failed to add item to cart');\n        }\n    };\n\n    const renderProductDetails = (product) => {\n        return (\n            <div className=\"product-details\">\n                <h2>{product.name} - ${product.price}</h2>\n                <p>{product.description}</p>\n                <p>Quantity: {product.quantity}</p> {/* Adjust based on your data structure */}\n                <button \n                    className=\"add-to-cart-button\" \n                    onClick={() => addItemToCart({\n                        id: product.id,\n                        title: product.name,\n                        price: product.price,\n                        quantity: 1 // Assuming a default quantity\n                    })}\n                >\n                    Add to Cart\n                </button>\n                <button className=\"back-button\" onClick={() => setSelectedProduct(null)}>Back to Products</button>\n            </div>\n        );\n    };\n\n    return (\n        <div className=\"product-list-container\">\n            {selectedProduct ? (\n                renderProductDetails(selectedProduct)\n            ) : (\n                <>\n                    <h1>Products</h1>\n                    <div>\n                        {products.map((product, index) => (\n                            <div key={index} className=\"product-item\">\n                                <h2 className=\"product-title\">{product.name} - ${product.price}</h2>\n                                <p>{product.description}</p>\n                                <button \n                                    className=\"view-details-button\" \n                                    onClick={() => setSelectedProduct(product)}\n                                >\n                                    View Details\n                                </button>\n                                <button \n                                    className=\"add-to-cart-button\" \n                                    onClick={() => addItemToCart({\n                                        id: product.id,\n                                        title: product.name,\n                                        price: product.price,\n                                        quantity: 1\n                                    })}\n                                >\n                                    Add to Cart\n                                </button>\n                            </div>\n                        ))}\n                    </div>\n                    <button \n                        className=\"back-to-home-button\" \n                        onClick={() => navigate('/')} // Use navigate function here\n                    >\n                        Back to Home\n                    </button>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default ProductList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}