{"ast":null,"code":"// Adjustments in Cart.js\n\nconst updateQuantity = async (itemId, action) => {\n  const username = localStorage.getItem(\"username\");\n  const endpoint = `http://localhost:3000/cart/${action === 'increment' ? 'increment' : 'decrement'}`;\n  try {\n    const response = await fetch(endpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        itemId\n      })\n    });\n    const data = await response.json();\n    if (data.success) {\n      // Fetch the updated cart items after successful update\n      fetchCartItems();\n    } else {\n      console.error(\"Failed to update cart item quantity:\", data.message);\n    }\n  } catch (error) {\n    console.error(\"Error updating cart item quantity:\", error);\n  }\n};\nconst fetchCartItems = async () => {\n  const username = localStorage.getItem(\"username\");\n  if (username) {\n    try {\n      const response = await fetch(`http://localhost:3000/cart/${username}`);\n      const data = await response.json();\n      setCartItems(data);\n    } catch (error) {\n      console.error(\"Error fetching cart items:\", error);\n    }\n  }\n};\n\n// Replace incrementQuantity and decrementQuantity functions with calls to updateQuantity\nconst incrementQuantity = itemId => {\n  updateQuantity(itemId, 'increment');\n};\nconst decrementQuantity = itemId => {\n  updateQuantity(itemId, 'decrement');\n};","map":{"version":3,"names":["updateQuantity","itemId","action","username","localStorage","getItem","endpoint","response","fetch","method","headers","body","JSON","stringify","data","json","success","fetchCartItems","console","error","message","setCartItems","incrementQuantity","decrementQuantity"],"sources":["C:/Users/Smiley/Documents/GitHub/website_testing/client/src/components/Cart.js"],"sourcesContent":["// Adjustments in Cart.js\r\n\r\nconst updateQuantity = async (itemId, action) => {\r\n    const username = localStorage.getItem(\"username\");\r\n    const endpoint = `http://localhost:3000/cart/${action === 'increment' ? 'increment' : 'decrement'}`;\r\n    try {\r\n        const response = await fetch(endpoint, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ username, itemId }),\r\n        });\r\n        const data = await response.json();\r\n        if (data.success) {\r\n            // Fetch the updated cart items after successful update\r\n            fetchCartItems();\r\n        } else {\r\n            console.error(\"Failed to update cart item quantity:\", data.message);\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Error updating cart item quantity:\", error);\r\n    }\r\n};\r\n\r\nconst fetchCartItems = async () => {\r\n    const username = localStorage.getItem(\"username\");\r\n    if (username) {\r\n        try {\r\n            const response = await fetch(`http://localhost:3000/cart/${username}`);\r\n            const data = await response.json();\r\n            setCartItems(data);\r\n        } catch (error) {\r\n            console.error(\"Error fetching cart items:\", error);\r\n        }\r\n    }\r\n};\r\n\r\n// Replace incrementQuantity and decrementQuantity functions with calls to updateQuantity\r\nconst incrementQuantity = (itemId) => {\r\n    updateQuantity(itemId, 'increment');\r\n};\r\n\r\nconst decrementQuantity = (itemId) => {\r\n    updateQuantity(itemId, 'decrement');\r\n};"],"mappings":"AAAA;;AAEA,MAAMA,cAAc,GAAG,MAAAA,CAAOC,MAAM,EAAEC,MAAM,KAAK;EAC7C,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EACjD,MAAMC,QAAQ,GAAI,8BAA6BJ,MAAM,KAAK,WAAW,GAAG,WAAW,GAAG,WAAY,EAAC;EACnG,IAAI;IACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAQ,EAAE;MACnCG,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEV,QAAQ;QAAEF;MAAO,CAAC;IAC7C,CAAC,CAAC;IACF,MAAMa,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClC,IAAID,IAAI,CAACE,OAAO,EAAE;MACd;MACAC,cAAc,CAAC,CAAC;IACpB,CAAC,MAAM;MACHC,OAAO,CAACC,KAAK,CAAC,sCAAsC,EAAEL,IAAI,CAACM,OAAO,CAAC;IACvE;EACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;IACZD,OAAO,CAACC,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;EAC9D;AACJ,CAAC;AAED,MAAMF,cAAc,GAAG,MAAAA,CAAA,KAAY;EAC/B,MAAMd,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EACjD,IAAIF,QAAQ,EAAE;IACV,IAAI;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,8BAA6BL,QAAS,EAAC,CAAC;MACtE,MAAMW,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAClCM,YAAY,CAACP,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACZD,OAAO,CAACC,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACtD;EACJ;AACJ,CAAC;;AAED;AACA,MAAMG,iBAAiB,GAAIrB,MAAM,IAAK;EAClCD,cAAc,CAACC,MAAM,EAAE,WAAW,CAAC;AACvC,CAAC;AAED,MAAMsB,iBAAiB,GAAItB,MAAM,IAAK;EAClCD,cAAc,CAACC,MAAM,EAAE,WAAW,CAAC;AACvC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}