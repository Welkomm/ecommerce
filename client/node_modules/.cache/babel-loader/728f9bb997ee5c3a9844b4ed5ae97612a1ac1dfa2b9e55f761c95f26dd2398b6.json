{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smiley\\\\Documents\\\\GitHub\\\\website_testing\\\\client\\\\src\\\\components\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Signup.css'; // Adjust the path as necessary\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  // Add other state variables as necessary\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3000/signup', {\n        // Ensure URL matches your server\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          username,\n          password /*, other fields */\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert(\"User created successfully!\");\n        navigate('/login'); // Redirect to the login page\n      } else {\n        alert(data.message); // Show error message from server\n      }\n    } catch (error) {\n      alert(\"An error occurred during signup.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signup-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"signup-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true,\n        className: \"signup-input\",\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true,\n        className: \"signup-input\",\n        placeholder: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true,\n        className: \"signup-input\",\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"signup-button\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"8/ltzVyIfHVAmqazCxUygXjGasE=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Signup","_s","email","setEmail","username","setUsername","password","setPassword","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","success","alert","message","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Smiley/Documents/GitHub/website_testing/client/src/components/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Signup.css'; // Adjust the path as necessary\r\n\r\nconst Signup = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  // Add other state variables as necessary\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await fetch('http://localhost:3000/signup', { // Ensure URL matches your server\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, username, password /*, other fields */ }),\r\n      });\r\n      const data = await response.json();\r\n      if (data.success) {\r\n        alert(\"User created successfully!\");\r\n        navigate('/login'); // Redirect to the login page\r\n      } else {\r\n        alert(data.message); // Show error message from server\r\n      }\r\n    } catch (error) {\r\n      alert(\"An error occurred during signup.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      <h1>Sign Up</h1>\r\n      <form onSubmit={handleSubmit} className=\"signup-form\">\r\n        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required className=\"signup-input\" placeholder=\"Email\" />\r\n        <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} required className=\"signup-input\" placeholder=\"Username\" />\r\n        <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} required className=\"signup-input\" placeholder=\"Password\" />\r\n        {/* Include other input fields as necessary */}\r\n        <button type=\"submit\" className=\"signup-button\">Sign Up</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}