{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smiley\\\\Documents\\\\GitHub\\\\ecommerce-website-project-spring-2024\\\\client\\\\src\\\\components\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\n// ResetPassword.js\nimport React, { useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport './ResetPasswordAndForgotPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const navigate = useNavigate();\n  const {\n    token\n  } = useParams();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (newPassword !== confirmPassword) {\n      alert(\"Passwords do not match.\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:3000/reset-password/${token}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          newPassword\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert('Password reset successful.');\n        navigate('/login');\n      } else {\n        alert(data.message);\n      }\n    } catch (error) {\n      console.error(\"An error occurred during password reset:\", error);\n      alert(\"An error occurred during password reset.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"reset-password-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value),\n        placeholder: \"New Password\",\n        required: true,\n        className: \"reset-password-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        placeholder: \"Confirm Password\",\n        required: true,\n        className: \"reset-password-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"reset-password-button\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(ResetPassword, \"ZTXMx0r/McBCK/dPJCecLXADpA4=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useNavigate","useParams","jsxDEV","_jsxDEV","ResetPassword","_s","newPassword","setNewPassword","confirmPassword","setConfirmPassword","navigate","token","handleSubmit","e","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","data","json","success","message","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/Smiley/Documents/GitHub/ecommerce-website-project-spring-2024/client/src/components/ResetPassword.js"],"sourcesContent":["// ResetPassword.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport './ResetPasswordAndForgotPassword.css';\r\n\r\nconst ResetPassword = () => {\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const navigate = useNavigate();\r\n    const { token } = useParams();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (newPassword !== confirmPassword) {\r\n        alert(\"Passwords do not match.\");\r\n        return;\r\n        }\r\n        try {\r\n        const response = await fetch(`http://localhost:3000/reset-password/${token}`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ newPassword }),\r\n        });\r\n        const data = await response.json();\r\n        if (data.success) {\r\n            alert('Password reset successful.');\r\n            navigate('/login');\r\n        } else {\r\n            alert(data.message);\r\n        }\r\n        } catch (error) {\r\n        console.error(\"An error occurred during password reset:\", error);\r\n        alert(\"An error occurred during password reset.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"reset-password-container\">\r\n        <h1>Reset Password</h1>\r\n        <form onSubmit={handleSubmit} className=\"reset-password-form\">\r\n            <input type=\"password\" value={newPassword} onChange={(e) => setNewPassword(e.target.value)} placeholder=\"New Password\" required className=\"reset-password-input\" />\r\n            <input type=\"password\" value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)} placeholder=\"Confirm Password\" required className=\"reset-password-input\" />\r\n            <button type=\"submit\" className=\"reset-password-button\">Reset Password</button>\r\n        </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}