{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smiley\\\\Documents\\\\GitHub\\\\website_testing\\\\client\\\\src\\\\components\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const auth = getAuth();\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (user) {\n        setIsAuthenticated(true);\n      } else {\n        setIsAuthenticated(false);\n      }\n      setIsLoading(false);\n    });\n\n    // Cleanup subscription on unmount\n    return () => unsubscribe();\n  }, [auth]);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this); // Or any other loading indicator\n  }\n  return isAuthenticated ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 28\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 41\n  }, this);\n};\n_s(ProtectedRoute, \"WRXjUPutFw5O39gJHBZtWrpgCxI=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","getAuth","onAuthStateChanged","useState","useEffect","jsxDEV","_jsxDEV","ProtectedRoute","_s","isLoading","setIsLoading","isAuthenticated","setIsAuthenticated","auth","unsubscribe","user","children","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/Smiley/Documents/GitHub/website_testing/client/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst ProtectedRoute = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const auth = getAuth();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        setIsAuthenticated(true);\r\n      } else {\r\n        setIsAuthenticated(false);\r\n      }\r\n      setIsLoading(false);\r\n    });\r\n\r\n    // Cleanup subscription on unmount\r\n    return () => unsubscribe();\r\n  }, [auth]);\r\n\r\n  if (isLoading) {\r\n    return <div>Loading...</div>; // Or any other loading indicator\r\n  }\r\n\r\n  return isAuthenticated ? <Outlet /> : <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AACnD,SAASC,OAAO,EAAEC,kBAAkB,QAAQ,eAAe;AAC3D,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAMU,IAAI,GAAGZ,OAAO,CAAC,CAAC;EAEtBG,SAAS,CAAC,MAAM;IACd,MAAMU,WAAW,GAAGZ,kBAAkB,CAACW,IAAI,EAAGE,IAAI,IAAK;MACrD,IAAIA,IAAI,EAAE;QACRH,kBAAkB,CAAC,IAAI,CAAC;MAC1B,CAAC,MAAM;QACLA,kBAAkB,CAAC,KAAK,CAAC;MAC3B;MACAF,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;;IAEF;IACA,OAAO,MAAMI,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,CAACD,IAAI,CAAC,CAAC;EAEV,IAAIJ,SAAS,EAAE;IACb,oBAAOH,OAAA;MAAAU,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAChC;EAEA,OAAOT,eAAe,gBAAGL,OAAA,CAACN,MAAM;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGd,OAAA,CAACP,QAAQ;IAACsB,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChE,CAAC;AAACZ,EAAA,CAxBID,cAAc;AAAAe,EAAA,GAAdf,cAAc;AA0BpB,eAAeA,cAAc;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}