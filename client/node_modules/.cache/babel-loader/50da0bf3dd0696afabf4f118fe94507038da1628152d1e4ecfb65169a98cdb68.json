{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smiley\\\\Documents\\\\GitHub\\\\website_testing\\\\client\\\\src\\\\components\\\\ProtectedRoute.js\";\nimport React from 'react';\nimport { Navigate, Outlet } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = () => {\n  // Check if user information exists in local storage\n  const user = localStorage.getItem('user');\n\n  // If user information is found, render the Outlet to allow access to child routes\n  // Otherwise, redirect to the login page\n  return user ? /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 17\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 30\n  }, this);\n};\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","Outlet","jsxDEV","_jsxDEV","ProtectedRoute","user","localStorage","getItem","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/Smiley/Documents/GitHub/website_testing/client/src/components/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = () => {\r\n  // Check if user information exists in local storage\r\n  const user = localStorage.getItem('user');\r\n\r\n  // If user information is found, render the Outlet to allow access to child routes\r\n  // Otherwise, redirect to the login page\r\n  return user ? <Outlet /> : <Navigate to=\"/login\" />;\r\n};\r\n\r\nexport default ProtectedRoute;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAC3B;EACA,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;;EAEzC;EACA;EACA,OAAOF,IAAI,gBAAGF,OAAA,CAACF,MAAM;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAAGR,OAAA,CAACH,QAAQ;IAACY,EAAE,EAAC;EAAQ;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrD,CAAC;AAACE,EAAA,GAPIT,cAAc;AASpB,eAAeA,cAAc;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}