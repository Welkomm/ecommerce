{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smiley\\\\Documents\\\\GitHub\\\\website_testing\\\\client\\\\src\\\\components\\\\Orders.js\",\n  _s = $RefreshSig$();\n// src/components/Orders.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Orders.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Orders = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const {\n    products\n  } = useContext(ProductsContext); // Access products from context\n\n  useEffect(() => {\n    const fetchOrders = async () => {\n      const username = localStorage.getItem(\"username\");\n      if (username) {\n        try {\n          const response = await fetch(`http://localhost:3000/orders/${username}`);\n          const data = await response.json();\n          // Check if data.orders exists and is an array before setting it\n          if (data.orders && Array.isArray(data.orders)) {\n            setOrders(data.orders);\n          } else {\n            // Handle the case where data.orders is not as expected\n            console.error(\"Unexpected response format:\", data);\n            setOrders([]); // Ensure orders is always an array\n          }\n        } catch (error) {\n          console.error(\"Error fetching orders:\", error);\n          setOrders([]); // Ensure orders is always an array\n        }\n      }\n    };\n    fetchOrders();\n  }, []);\n\n  // Function to find product name by ID\n  const getProductNameById = productId => {\n    const product = products.find(p => p.id === productId);\n    return product ? product.name : 'Unknown Product';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"orders-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), orders.length > 0 ? orders.map((order, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Order ID: \", order.orderID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [order.username, \" - \", order.orderDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", order.orderStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Products:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: order.products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/product/${product.id}`,\n            children: [getProductNameById(product.id), \" (\", product.id, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 37\n          }, this)\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No orders found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(Orders, \"AxuhylYd8mhG7ycLoBsB2W8kjF4=\");\n_c = Orders;\nexport default Orders;\nvar _c;\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Link","jsxDEV","_jsxDEV","Orders","_s","orders","setOrders","products","ProductsContext","fetchOrders","username","localStorage","getItem","response","fetch","data","json","Array","isArray","console","error","getProductNameById","productId","product","find","p","id","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","order","index","orderID","orderDate","orderStatus","to","_c","$RefreshReg$"],"sources":["C:/Users/Smiley/Documents/GitHub/website_testing/client/src/components/Orders.js"],"sourcesContent":["// src/components/Orders.js\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Orders.css';\n\nconst Orders = () => {\n    const [orders, setOrders] = useState([]);\n    const { products } = useContext(ProductsContext); // Access products from context\n\n    useEffect(() => {\n        const fetchOrders = async () => {\n            const username = localStorage.getItem(\"username\");\n            if (username) {\n                try {\n                    const response = await fetch(`http://localhost:3000/orders/${username}`);\n                    const data = await response.json();\n                    // Check if data.orders exists and is an array before setting it\n                    if (data.orders && Array.isArray(data.orders)) {\n                        setOrders(data.orders);\n                    } else {\n                        // Handle the case where data.orders is not as expected\n                        console.error(\"Unexpected response format:\", data);\n                        setOrders([]); // Ensure orders is always an array\n                    }\n                } catch (error) {\n                    console.error(\"Error fetching orders:\", error);\n                    setOrders([]); // Ensure orders is always an array\n                }\n            }\n        };\n\n        fetchOrders();\n    }, []);\n\n    // Function to find product name by ID\n    const getProductNameById = (productId) => {\n        const product = products.find(p => p.id === productId);\n        return product ? product.name : 'Unknown Product';\n    };\n\n    return (\n        <div className=\"orders-container\">\n            <h1>Your Orders</h1>\n            {orders.length > 0 ? (\n                orders.map((order, index) => (\n                    <div key={index} className=\"order-item\">\n                        <h2>Order ID: {order.orderID}</h2>\n                        <p>{order.username} - {order.orderDate}</p>\n                        <p>Status: {order.orderStatus}</p>\n                        <p>Products:</p>\n                        <ul>\n                            {order.products.map(product => (\n                                <li key={product.id}>\n                                    <Link to={`/product/${product.id}`}>\n                                        {getProductNameById(product.id)} ({product.id})\n                                    </Link>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                ))\n            ) : (\n                <p>No orders found.</p>\n            )}\n        </div>\n    );\n};\n\nexport default Orders;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}