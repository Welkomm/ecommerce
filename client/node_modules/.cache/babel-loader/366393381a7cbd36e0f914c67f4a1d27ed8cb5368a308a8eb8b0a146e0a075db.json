{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smiley\\\\Documents\\\\GitHub\\\\ecommerce-website-project-spring-2024\\\\client\\\\src\\\\components\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Profile.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // Retrieve user information from localStorage directly within the component\n  const [username, setUsername] = useState(localStorage.getItem('username'));\n  const [password, setPassword] = useState(localStorage.getItem('password'));\n  const [email, setEmail] = useState(localStorage.getItem('email'));\n  const [phoneNumber, setPhoneNumber] = useState(localStorage.getItem('phoneNumber'));\n  const [firstName, setFirstName] = useState(localStorage.getItem('firstName'));\n  const [lastName, setLastName] = useState(localStorage.getItem('lastName'));\n  const [editMode, setEditMode] = useState(false);\n  const [formIsDirty, setFormIsDirty] = useState(false);\n  useEffect(() => {\n    return () => {\n      // Reset all states to initial values\n      setUsername(localStorage.getItem('username'));\n      setPassword(localStorage.getItem('password'));\n      setEmail(localStorage.getItem('email'));\n      setPhoneNumber(localStorage.getItem('phoneNumber'));\n      setFirstName(localStorage.getItem('firstName'));\n      setLastName(localStorage.getItem('lastName'));\n    };\n  }, []);\n  useEffect(() => {\n    const handleBeforeUnload = event => {\n      if (formIsDirty) {\n        // You need to track if the form has changes\n        const message = \"You have unsaved changes. Are you sure you want to leave?\";\n        event.returnValue = message;\n        return message;\n      }\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, [formIsDirty]); // Depend on whether the form is dirty\n\n  const handleInputChange = setter => e => {\n    setter(e.target.value);\n    setFormIsDirty(true);\n  };\n  const handleSignOut = () => {\n    // Clear user information from localStorage\n    localStorage.clear();\n    // Redirect to the login page\n    navigate('/login');\n  };\n  const handleProfileUpdate = async () => {\n    if (!username.trim() || !password.trim() || !email.trim() || !phoneNumber.trim() || !firstName.trim() || !lastName.trim()) {\n      alert('Please fill in all fields before saving.');\n      return; // Stop the function if any field is empty\n    }\n\n    // Check if the username already exists\n    const checkUsernameResponse = await fetch(`http://localhost:3000/checkUsername`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        originalUsername: localStorage.getItem('username')\n      })\n    });\n    const usernameCheck = await checkUsernameResponse.json();\n    if (!usernameCheck.success) {\n      alert(usernameCheck.message);\n      return;\n    }\n\n    // Confirmation dialog\n    const isConfirmed = window.confirm(\"Are you sure you want to save these changes to your profile?\");\n    if (!isConfirmed) {\n      return; // Stop the function if the user cancels\n    }\n\n    // Proceed with saving the profile if confirmed\n    const updatedInfo = {\n      originalUsername: localStorage.getItem('username'),\n      // Use the original username to identify the user in the backend\n      newUsername: username,\n      newPassword: password,\n      email,\n      phoneNumber,\n      firstName,\n      lastName\n    };\n    const response = await fetch('http://localhost:3000/updateProfile', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedInfo)\n    });\n    const data = await response.json();\n    if (data.success) {\n      // Update localStorage with new user info if the server confirms success\n      localStorage.setItem('username', username); // Username is already being updated correctly\n\n      // Ensure these fields are updated based on the server's response\n      localStorage.setItem('email', email);\n      localStorage.setItem('phoneNumber', phoneNumber);\n      localStorage.setItem('firstName', firstName);\n      localStorage.setItem('lastName', lastName);\n      alert('Profile updated successfully');\n      setEditMode(false);\n    } else {\n      alert('Failed to update profile. ' + data.message);\n    }\n  };\n  const handleDeleteAccount = async () => {\n    // Confirmation dialog\n    const isConfirmed = window.confirm(\"Are you sure you want to delete your account? This action cannot be undone.\");\n    if (!isConfirmed) {\n      return; // Stop the function if the user cancels\n    }\n\n    // Proceed with the deletion logic if confirmed\n    const username = localStorage.getItem('username'); // Get the username from localStorage\n\n    const response = await fetch('http://localhost:3000/deleteAccount', {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username\n      })\n    });\n    const data = await response.json();\n    if (data.success) {\n      localStorage.clear(); // Clear all local storage\n      alert('Account deleted successfully');\n      navigate('/login'); // Redirect to login page or home page\n    } else {\n      alert('Failed to delete account. ' + data.message);\n    }\n  };\n  const navigateToHome = () => {\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: handleInputChange(setUsername)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: handleInputChange(setPassword)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: handleInputChange(setEmail)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Phone Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: phoneNumber,\n        onChange: handleInputChange(setPhoneNumber)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"First Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: firstName,\n        onChange: handleInputChange(setFirstName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Last Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: lastName,\n        onChange: handleInputChange(setLastName)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setEditMode(false);\n          setFormIsDirty(false);\n        },\n        className: \"back-button\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleProfileUpdate,\n        className: \"profile-save-button\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 14\n        }, this), \" \", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 14\n        }, this), \" \", email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Phone Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 14\n        }, this), \" \", phoneNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"First Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 14\n        }, this), \" \", firstName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Last Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 14\n        }, this), \" \", lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: navigateToHome,\n        className: \"profile-back-to-home-button\",\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setEditMode(true);\n          setFormIsDirty(false);\n        },\n        className: \"edit-profile-button\",\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSignOut,\n        className: \"profile-sign-out-button\",\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteAccount,\n        className: \"delete-account-button\",\n        children: \"Delete My Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"Jvx3hpxZ0ocrYp4ga1Hym8smsTw=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","navigate","username","setUsername","localStorage","getItem","password","setPassword","email","setEmail","phoneNumber","setPhoneNumber","firstName","setFirstName","lastName","setLastName","editMode","setEditMode","formIsDirty","setFormIsDirty","handleBeforeUnload","event","message","returnValue","window","addEventListener","removeEventListener","handleInputChange","setter","e","target","value","handleSignOut","clear","handleProfileUpdate","trim","alert","checkUsernameResponse","fetch","method","headers","body","JSON","stringify","originalUsername","usernameCheck","json","success","isConfirmed","confirm","updatedInfo","newUsername","newPassword","response","data","setItem","handleDeleteAccount","navigateToHome","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Smiley/Documents/GitHub/ecommerce-website-project-spring-2024/client/src/components/Profile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Profile.css';\r\n\r\nconst Profile = () => {\r\n  const navigate = useNavigate();\r\n\r\n  // Retrieve user information from localStorage directly within the component\r\n  const [username, setUsername] = useState(localStorage.getItem('username'));\r\n  const [password, setPassword] = useState(localStorage.getItem('password'));\r\n  const [email, setEmail] = useState(localStorage.getItem('email'));\r\n  const [phoneNumber, setPhoneNumber] = useState(localStorage.getItem('phoneNumber'));\r\n  const [firstName, setFirstName] = useState(localStorage.getItem('firstName'));\r\n  const [lastName, setLastName] = useState(localStorage.getItem('lastName'));\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [formIsDirty, setFormIsDirty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n        // Reset all states to initial values\r\n        setUsername(localStorage.getItem('username'));\r\n        setPassword(localStorage.getItem('password'));\r\n        setEmail(localStorage.getItem('email'));\r\n        setPhoneNumber(localStorage.getItem('phoneNumber'));\r\n        setFirstName(localStorage.getItem('firstName'));\r\n        setLastName(localStorage.getItem('lastName'));\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleBeforeUnload = (event) => {\r\n        if (formIsDirty) { // You need to track if the form has changes\r\n            const message = \"You have unsaved changes. Are you sure you want to leave?\";\r\n            event.returnValue = message;\r\n            return message;\r\n        }\r\n    };\r\n\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n    return () => {\r\n        window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    };\r\n  }, [formIsDirty]); // Depend on whether the form is dirty\r\n\r\n  const handleInputChange = (setter) => (e) => {\r\n    setter(e.target.value);\r\n    setFormIsDirty(true);\r\n  };\r\n\r\n  const handleSignOut = () => {\r\n    // Clear user information from localStorage\r\n    localStorage.clear();\r\n    // Redirect to the login page\r\n    navigate('/login');\r\n  };\r\n\r\n  const handleProfileUpdate = async () => {\r\n    if (!username.trim() || !password.trim() || !email.trim() || !phoneNumber.trim() || !firstName.trim() || !lastName.trim()) {\r\n      alert('Please fill in all fields before saving.');\r\n      return; // Stop the function if any field is empty\r\n    }\r\n\r\n    // Check if the username already exists\r\n    const checkUsernameResponse = await fetch(`http://localhost:3000/checkUsername`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, originalUsername: localStorage.getItem('username') }),\r\n    });\r\n\r\n    const usernameCheck = await checkUsernameResponse.json();\r\n    if (!usernameCheck.success) {\r\n        alert(usernameCheck.message);\r\n        return;\r\n    }\r\n\r\n    // Confirmation dialog\r\n    const isConfirmed = window.confirm(\"Are you sure you want to save these changes to your profile?\");\r\n    if (!isConfirmed) {\r\n        return; // Stop the function if the user cancels\r\n    }\r\n\r\n    // Proceed with saving the profile if confirmed\r\n    const updatedInfo = {\r\n      originalUsername: localStorage.getItem('username'), // Use the original username to identify the user in the backend\r\n      newUsername: username,\r\n      newPassword: password,\r\n      email,\r\n      phoneNumber,\r\n      firstName,\r\n      lastName,\r\n    };\r\n\r\n    const response = await fetch('http://localhost:3000/updateProfile', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(updatedInfo),\r\n    });\r\n\r\n    const data = await response.json();\r\n      if (data.success) {\r\n        // Update localStorage with new user info if the server confirms success\r\n        localStorage.setItem('username', username); // Username is already being updated correctly\r\n\r\n        // Ensure these fields are updated based on the server's response\r\n        localStorage.setItem('email', email);\r\n        localStorage.setItem('phoneNumber', phoneNumber);\r\n        localStorage.setItem('firstName', firstName);\r\n        localStorage.setItem('lastName', lastName);\r\n\r\n        alert('Profile updated successfully');\r\n        setEditMode(false);\r\n      } else {\r\n        alert('Failed to update profile. ' + data.message);\r\n      }\r\n  };\r\n\r\n  const handleDeleteAccount = async () => {\r\n    // Confirmation dialog\r\n    const isConfirmed = window.confirm(\"Are you sure you want to delete your account? This action cannot be undone.\");\r\n    if (!isConfirmed) {\r\n        return; // Stop the function if the user cancels\r\n    }\r\n\r\n    // Proceed with the deletion logic if confirmed\r\n    const username = localStorage.getItem('username'); // Get the username from localStorage\r\n\r\n    const response = await fetch('http://localhost:3000/deleteAccount', {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ username }),\r\n  });\r\n\r\n  const data = await response.json();\r\n    if (data.success) {\r\n        localStorage.clear(); // Clear all local storage\r\n        alert('Account deleted successfully');\r\n        navigate('/login'); // Redirect to login page or home page\r\n    } else {\r\n        alert('Failed to delete account. ' + data.message);\r\n    }\r\n  };\r\n\r\n  const navigateToHome = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <h1>User Profile</h1>\r\n      {editMode ? (\r\n        <>\r\n          <label>Username:</label>\r\n          <input type=\"text\" value={username} onChange={handleInputChange(setUsername)} />\r\n          <label>Password:</label>\r\n          <input type=\"password\" value={password} onChange={handleInputChange(setPassword)} />\r\n          <label>Email:</label>\r\n          <input type=\"email\" value={email} onChange={handleInputChange(setEmail)} />\r\n          <label>Phone Number:</label>\r\n          <input type=\"text\" value={phoneNumber} onChange={handleInputChange(setPhoneNumber)} />\r\n          <label>First Name:</label>\r\n          <input type=\"text\" value={firstName} onChange={handleInputChange(setFirstName)} />\r\n          <label>Last Name:</label>\r\n          <input type=\"text\" value={lastName} onChange={handleInputChange(setLastName)} />\r\n          <button onClick={() => { setEditMode(false); setFormIsDirty(false); }} className=\"back-button\">Back</button>\r\n          <button onClick={handleProfileUpdate} className=\"profile-save-button\">Save Changes</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <p><strong>Username:</strong> {username}</p>\r\n          <p><strong>Email:</strong> {email}</p>\r\n          <p><strong>Phone Number:</strong> {phoneNumber}</p>\r\n          <p><strong>First Name:</strong> {firstName}</p>\r\n          <p><strong>Last Name:</strong> {lastName}</p>\r\n          <button onClick={navigateToHome} className=\"profile-back-to-home-button\">Back to Home</button>\r\n          <button onClick={() => { setEditMode(true); setFormIsDirty(false); }} className=\"edit-profile-button\">Edit Profile</button>\r\n          <button onClick={handleSignOut} className=\"profile-sign-out-button\">Sign Out</button>\r\n          <button onClick={handleDeleteAccount} className=\"delete-account-button\">Delete My Account</button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}