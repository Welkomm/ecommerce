{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smiley\\\\Documents\\\\GitHub\\\\ecommerce-website-project-spring-2024\\\\client\\\\src\\\\components\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\n// ForgotPassword.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './ResetPasswordAndForgotPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3000/forgot-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert('Password reset link has been sent to your email.');\n        navigate('/login');\n      } else {\n        alert(data.message);\n      }\n    } catch (error) {\n      console.error(\"An error occurred during forgot password:\", error);\n      alert(\"An error occurred during forgot password.\");\n    }\n  };\n  const handleBack = () => {\n    navigate('/login'); // Navigates back to the login page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"forgot-password-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Email\",\n        required: true,\n        className: \"forgot-password-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"forgot-password-button\",\n        children: \"Send Reset Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleBack,\n        className: \"forgot-password-back-button\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `/images/UAE_Traditional_Mart.png`,\n      alt: \"Banner\",\n      className: \"home-banner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(ForgotPassword, \"J7p/BBmoSTN1LG3mq3dDy/zGbg4=\", false, function () {\n  return [useNavigate];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","navigate","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","success","alert","message","error","console","handleBack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Smiley/Documents/GitHub/ecommerce-website-project-spring-2024/client/src/components/ForgotPassword.js"],"sourcesContent":["// ForgotPassword.js\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './ResetPasswordAndForgotPassword.css';\r\n\r\nconst ForgotPassword = () => {\r\n    const [email, setEmail] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n        const response = await fetch('http://localhost:3000/forgot-password', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ email }),\r\n        });\r\n        const data = await response.json();\r\n        if (data.success) {\r\n            alert('Password reset link has been sent to your email.');\r\n            navigate('/login');\r\n        } else {\r\n            alert(data.message);\r\n        }\r\n        } catch (error) {\r\n        console.error(\"An error occurred during forgot password:\", error);\r\n        alert(\"An error occurred during forgot password.\");\r\n        }\r\n    };\r\n\r\n    const handleBack = () => {\r\n        navigate('/login'); // Navigates back to the login page\r\n    };\r\n\r\n    return (\r\n        <div className=\"forgot-password-container\">\r\n            <h1>Forgot Password</h1>\r\n            <form onSubmit={handleSubmit} className=\"forgot-password-form\">\r\n                <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Email\" required className=\"forgot-password-input\" />\r\n                <button type=\"submit\" className=\"forgot-password-button\">Send Reset Link</button>\r\n                <button type=\"button\" onClick={handleBack} className=\"forgot-password-back-button\">Back</button>\r\n            </form>\r\n            <img src={`/images/UAE_Traditional_Mart.png`} alt=\"Banner\" className=\"home-banner\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForgotPassword;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}