{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smiley\\\\Documents\\\\GitHub\\\\website_testing\\\\client\\\\src\\\\components\\\\ProductList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport SearchBar from './SearchBar'; // Ensure this path matches your file structure\nimport './ProductList.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProductList = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  const [cartItems, setCartItems] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [rating, setRating] = useState(0);\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const searchQuery = queryParams.get('search');\n    const section = queryParams.get('section'); // Get the section parameter from the URL\n\n    const fetchAndFilterProducts = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/products');\n        const data = await response.json();\n        let fetchedProducts = Array.isArray(data) ? data : data.products || [];\n\n        // Filter by section if it's specified in the URL\n        if (section) {\n          fetchedProducts = fetchedProducts.filter(product => product.id.startsWith(section));\n        }\n\n        // Existing search filtering logic\n        if (searchQuery) {\n          const lowerCaseQuery = searchQuery.toLowerCase();\n          fetchedProducts = fetchedProducts.filter(product => product.id.toLowerCase().includes(lowerCaseQuery) || product.name.toLowerCase().includes(lowerCaseQuery) || product.description.toLowerCase().includes(lowerCaseQuery));\n        }\n        setProducts(fetchedProducts);\n        setFilteredProducts(fetchedProducts);\n      } catch (error) {\n        console.error(\"Error fetching products:\", error);\n      }\n    };\n    const fetchProductDetails = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/products'); // Adjust URL as needed\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setProducts(data); // Assuming the response is the array of products\n      } catch (error) {\n        console.error(\"Could not fetch product details:\", error);\n      }\n    };\n    fetchAndFilterProducts();\n  }, [location.search]); // React to changes in search query and section\n\n  const handleSearch = query => {\n    // Navigate to the same page but with the new search query, replacing any existing query\n    navigate(`?search=${encodeURIComponent(query)}`);\n  };\n  const handleRatingChange = newRating => {\n    setRating(newRating);\n  };\n  const submitRating = async productId => {\n    const username = localStorage.getItem(\"username\");\n    if (!username) {\n      alert(\"Please log in to submit a rating.\");\n      return;\n    }\n    if (rating === 0) {\n      alert(\"Please select a rating before submitting.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:3000/submitRating\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          productId,\n          rating\n        })\n      });\n      if (response.ok) {\n        alert(\"Rating submitted successfully!\");\n        setRating(0);\n\n        // Fetch the updated product data\n\n        const updatedProductsResponse = await fetch('http://localhost:3000/products');\n        const updatedProductsData = await updatedProductsResponse.json();\n        const updatedProducts = Array.isArray(updatedProductsData) ? updatedProductsData : updatedProductsData.products || [];\n        setProducts(updatedProducts);\n        setFilteredProducts(updatedProducts);\n        if (selectedProduct && selectedProduct.id === productId) {\n          const updatedSelectedProduct = updatedProducts.find(product => product.id === productId);\n          setSelectedProduct(updatedSelectedProduct);\n        }\n      } else {\n        alert(\"Failed to submit rating. Please try again.\");\n      }\n    } catch (error) {\n      console.error(\"Error submitting rating:\", error);\n      alert(\"An error occurred while submitting the rating.\");\n    }\n  };\n  useEffect(() => {\n    // Fetch product details and cart state\n    fetchProductDetails();\n    fetchCartState();\n  }, []); // Empty dependency array ensures this runs once on mount\n\n  const fetchCartItems = async () => {\n    const username = localStorage.getItem(\"username\");\n    if (username) {\n      try {\n        const response = await fetch(`http://localhost:3000/cart/${username}`);\n        const data = await response.json();\n        setCartItems(Array.isArray(data) ? data : []); // Ensure cartItems is always an array\n      } catch (error) {\n        console.error(\"Error fetching cart items:\", error);\n        setCartItems([]); // Set cartItems to an empty array in case of an error\n      }\n    }\n  };\n  const isAddToCartDisabled = product => {\n    const existingItem = cartItems.find(item => item.id === product.id);\n    const quantityInCart = existingItem ? existingItem.quantity : 0;\n    return quantityInCart >= product.maxQuantity;\n  };\n  const addItemToCart = async product => {\n    const username = localStorage.getItem(\"username\");\n    const existingItem = cartItems.find(item => item.id === product.id);\n    const quantityInCart = existingItem ? existingItem.quantity : 0;\n    if (quantityInCart + 1 > product.quantity) {\n      alert('You have reached the maximum available quantity for this item.');\n      return;\n    }\n    const addToCartResponse = await fetch('http://localhost:3000/addToCart', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        item: {\n          ...product,\n          maxQuantity: product.quantity\n        }\n      })\n    });\n    const data = await addToCartResponse.json();\n    if (data.success) {\n      alert('Item added to cart successfully');\n      fetchCartItems(); // Fetch the updated cart items after successful addition\n    } else {\n      alert('Failed to add item to cart');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-to-home-button\",\n        onClick: () => navigate('/'),\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        onSearch: handleSearch,\n        placeholder: \"Search for items...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"cart-button\",\n        onClick: () => navigate('/cart'),\n        children: \"Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), selectedProduct ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `/images/${selectedProduct.id}.jpg`,\n          alt: selectedProduct.name,\n          className: \"product-image-large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [selectedProduct.name, \" - \", selectedProduct.price, \" AED\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 29\n          }, this), selectedProduct.quantity == 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"out-of-stock-message\",\n            children: \"OUT OF STOCK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedProduct.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Rate this product:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rating-stars\",\n              children: [...Array(5)].map((_, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `star ${rating >= index + 1 ? \"filled\" : \"\"}`,\n                onClick: () => handleRatingChange(index + 1),\n                children: \"\\u2605\"\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => submitRating(selectedProduct.id),\n              children: \"Submit Rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"average-rating\",\n              children: [\"Average Rating: \", selectedProduct.averageRating.toFixed(1)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `add-to-cart-button ${selectedProduct.quantity == 0 || isAddToCartDisabled(selectedProduct) ? 'disabled' : ''}`,\n            onClick: () => addItemToCart({\n              id: selectedProduct.id,\n              title: selectedProduct.name,\n              price: selectedProduct.price,\n              quantity: 1\n            }),\n            disabled: selectedProduct.quantity == 0 || isAddToCartDisabled(selectedProduct),\n            children: \"Add to Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"back-button\",\n            onClick: () => setSelectedProduct(null),\n            children: \"Back to Products\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"similar-products-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Similar Products\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"similar-products\",\n          children: products.filter(product => product.id.startsWith(selectedProduct.id.slice(0, selectedProduct.id.lastIndexOf(\"-\"))) && product.id !== selectedProduct.id).map(similarProduct => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"similar-product-item\",\n            onClick: () => {\n              setSelectedProduct(similarProduct);\n              window.scrollTo(0, 0); // Scroll to the top of the page\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `/images/${similarProduct.id}.jpg`,\n              alt: similarProduct.name,\n              className: \"similar-product-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [similarProduct.name, \" - \", similarProduct.price, \" AED\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 37\n            }, this)]\n          }, similarProduct.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"products-grid\",\n        children: filteredProducts.map((product, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/images/${product.id}.jpg`,\n            alt: product.name,\n            className: \"product-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 33\n          }, this), product.quantity == 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"out-of-stock-message\",\n            children: \"OUT OF STOCK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"product-title\",\n            children: [product.name, \" - \", product.price, \" AED\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: product.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"average-rating\",\n            children: [\"Average Rating: \", product.averageRating.toFixed(1)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"view-details-button\",\n            onClick: () => setSelectedProduct(product),\n            children: \"View Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `add-to-cart-button ${product.quantity == 0 || isAddToCartDisabled(product) ? 'disabled' : ''}`,\n            onClick: () => addItemToCart({\n              id: product.id,\n              title: product.name,\n              price: product.price,\n              quantity: 1\n            }),\n            disabled: product.quantity == 0 || isAddToCartDisabled(product),\n            children: \"Add to Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductList, \"eMuC8zDL2uFsW9NuI5TIkcG50RI=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","SearchBar","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductList","_s","products","setProducts","filteredProducts","setFilteredProducts","selectedProduct","setSelectedProduct","cartItems","setCartItems","navigate","location","rating","setRating","queryParams","URLSearchParams","search","searchQuery","get","section","fetchAndFilterProducts","response","fetch","data","json","fetchedProducts","Array","isArray","filter","product","id","startsWith","lowerCaseQuery","toLowerCase","includes","name","description","error","console","fetchProductDetails","ok","Error","handleSearch","query","encodeURIComponent","handleRatingChange","newRating","submitRating","productId","username","localStorage","getItem","alert","method","headers","body","JSON","stringify","updatedProductsResponse","updatedProductsData","updatedProducts","updatedSelectedProduct","find","fetchCartState","fetchCartItems","isAddToCartDisabled","existingItem","item","quantityInCart","quantity","maxQuantity","addItemToCart","addToCartResponse","success","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","placeholder","src","alt","price","map","_","index","averageRating","toFixed","title","disabled","slice","lastIndexOf","similarProduct","window","scrollTo","_c","$RefreshReg$"],"sources":["C:/Users/Smiley/Documents/GitHub/website_testing/client/src/components/ProductList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport SearchBar from './SearchBar'; // Ensure this path matches your file structure\r\nimport './ProductList.css';\r\n\r\nconst ProductList = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const [filteredProducts, setFilteredProducts] = useState([]);\r\n    const [selectedProduct, setSelectedProduct] = useState(null);\r\n    const [cartItems, setCartItems] = useState([]);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const [rating, setRating] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const queryParams = new URLSearchParams(location.search);\r\n        const searchQuery = queryParams.get('search');\r\n        const section = queryParams.get('section'); // Get the section parameter from the URL\r\n\r\n        const fetchAndFilterProducts = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:3000/products');\r\n                const data = await response.json();\r\n                let fetchedProducts = Array.isArray(data) ? data : data.products || [];\r\n\r\n                // Filter by section if it's specified in the URL\r\n                if (section) {\r\n                    fetchedProducts = fetchedProducts.filter(product => product.id.startsWith(section));\r\n                }\r\n\r\n                // Existing search filtering logic\r\n                if (searchQuery) {\r\n                    const lowerCaseQuery = searchQuery.toLowerCase();\r\n                    fetchedProducts = fetchedProducts.filter(product =>\r\n                        product.id.toLowerCase().includes(lowerCaseQuery) ||\r\n                        product.name.toLowerCase().includes(lowerCaseQuery) ||\r\n                        product.description.toLowerCase().includes(lowerCaseQuery)\r\n                    );\r\n                }\r\n\r\n                setProducts(fetchedProducts);\r\n                setFilteredProducts(fetchedProducts);\r\n            } catch (error) {\r\n                console.error(\"Error fetching products:\", error);\r\n            }\r\n        };\r\n\r\n        const fetchProductDetails = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:3000/products'); // Adjust URL as needed\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                const data = await response.json();\r\n                setProducts(data); // Assuming the response is the array of products\r\n            } catch (error) {\r\n                console.error(\"Could not fetch product details:\", error);\r\n            }\r\n        };\r\n\r\n        fetchAndFilterProducts();\r\n    }, [location.search]); // React to changes in search query and section\r\n\r\n    const handleSearch = (query) => {\r\n        // Navigate to the same page but with the new search query, replacing any existing query\r\n        navigate(`?search=${encodeURIComponent(query)}`);\r\n    };\r\n\r\n    const handleRatingChange = (newRating) => {\r\n        setRating(newRating);\r\n    };\r\n\r\n    const submitRating = async (productId) => {\r\n        const username = localStorage.getItem(\"username\");\r\n        if (!username) {\r\n            alert(\"Please log in to submit a rating.\");\r\n            return;\r\n        }\r\n\r\n        if (rating === 0) {\r\n            alert(\"Please select a rating before submitting.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await fetch(\"http://localhost:3000/submitRating\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ username, productId, rating }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                alert(\"Rating submitted successfully!\");\r\n                setRating(0);\r\n\r\n                // Fetch the updated product data\r\n\r\n                const updatedProductsResponse = await fetch('http://localhost:3000/products');\r\n                const updatedProductsData = await updatedProductsResponse.json();\r\n                const updatedProducts = Array.isArray(updatedProductsData) ? updatedProductsData : updatedProductsData.products || [];\r\n\r\n                setProducts(updatedProducts);\r\n                setFilteredProducts(updatedProducts);\r\n\r\n                if (selectedProduct && selectedProduct.id === productId) {\r\n                    const updatedSelectedProduct = updatedProducts.find(product => product.id === productId);\r\n                    setSelectedProduct(updatedSelectedProduct);\r\n                }\r\n            } else {\r\n                alert(\"Failed to submit rating. Please try again.\");\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error submitting rating:\", error);\r\n            alert(\"An error occurred while submitting the rating.\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Fetch product details and cart state\r\n        fetchProductDetails();\r\n        fetchCartState();\r\n    }, []); // Empty dependency array ensures this runs once on mount\r\n\r\n    const fetchCartItems = async () => {\r\n        const username = localStorage.getItem(\"username\");\r\n        if (username) {\r\n            try {\r\n                const response = await fetch(`http://localhost:3000/cart/${username}`);\r\n                const data = await response.json();\r\n                setCartItems(Array.isArray(data) ? data : []); // Ensure cartItems is always an array\r\n            } catch (error) {\r\n                console.error(\"Error fetching cart items:\", error);\r\n                setCartItems([]); // Set cartItems to an empty array in case of an error\r\n            }\r\n        }\r\n    };\r\n\r\n    const isAddToCartDisabled = (product) => {\r\n        const existingItem = cartItems.find(item => item.id === product.id);\r\n        const quantityInCart = existingItem ? existingItem.quantity : 0;\r\n        return quantityInCart >= product.maxQuantity;\r\n    };\r\n\r\n    const addItemToCart = async (product) => {\r\n        const username = localStorage.getItem(\"username\");\r\n        \r\n        const existingItem = cartItems.find(item => item.id === product.id);\r\n        const quantityInCart = existingItem ? existingItem.quantity : 0;\r\n        \r\n        if (quantityInCart + 1 > product.quantity) {\r\n            alert('You have reached the maximum available quantity for this item.');\r\n            return;\r\n        }\r\n        \r\n        const addToCartResponse = await fetch('http://localhost:3000/addToCart', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ username, item: { ...product, maxQuantity: product.quantity } }),\r\n        });\r\n        const data = await addToCartResponse.json();\r\n        if (data.success) {\r\n            alert('Item added to cart successfully');\r\n            fetchCartItems(); // Fetch the updated cart items after successful addition\r\n        } else {\r\n            alert('Failed to add item to cart');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"product-list-container\">\r\n            <div className=\"search-bar-container\">\r\n                <button \r\n                    className=\"back-to-home-button\" \r\n                    onClick={() => navigate('/')}\r\n                >\r\n                    Back to Home\r\n                </button>\r\n                    <SearchBar onSearch={handleSearch} placeholder=\"Search for items...\" />\r\n                <button \r\n                    className=\"cart-button\" \r\n                    onClick={() => navigate('/cart')}\r\n                >\r\n                    Cart\r\n            </button>\r\n            </div>\r\n            {selectedProduct ? (\r\n                <>\r\n                    <div className=\"product-details\">\r\n                        <img src={`/images/${selectedProduct.id}.jpg`} alt={selectedProduct.name} className=\"product-image-large\" />\r\n                        <div className=\"product-info\">\r\n                            <h2>{selectedProduct.name} - {selectedProduct.price} AED</h2>\r\n                            {selectedProduct.quantity == 0 && (\r\n                                <p className=\"out-of-stock-message\">OUT OF STOCK</p>\r\n                            )}\r\n                            <p>{selectedProduct.description}</p>\r\n                            <div className=\"rating-container\">\r\n                                <span>Rate this product:</span>\r\n                                <div className=\"rating-stars\">\r\n                                    {[...Array(5)].map((_, index) => (\r\n                                        <span\r\n                                            key={index}\r\n                                            className={`star ${rating >= index + 1 ? \"filled\" : \"\"}`}\r\n                                            onClick={() => handleRatingChange(index + 1)}\r\n                                        >\r\n                                            &#9733;\r\n                                        </span>\r\n                                    ))}\r\n                                </div>\r\n                                <button onClick={() => submitRating(selectedProduct.id)}>\r\n                                    Submit Rating\r\n                                </button>\r\n                                <div className=\"average-rating\">\r\n                                    Average Rating: {selectedProduct.averageRating.toFixed(1)}\r\n                                </div>\r\n                            </div>\r\n                            <button \r\n                                className={`add-to-cart-button ${selectedProduct.quantity == 0 || isAddToCartDisabled(selectedProduct) ? 'disabled' : ''}`}\r\n                                onClick={() => addItemToCart({\r\n                                    id: selectedProduct.id,\r\n                                    title: selectedProduct.name,\r\n                                    price: selectedProduct.price,\r\n                                    quantity: 1\r\n                                })}\r\n                                    disabled={selectedProduct.quantity == 0 || isAddToCartDisabled(selectedProduct)}\r\n                            >\r\n                                Add to Cart\r\n                            </button>\r\n                            <button className=\"back-button\" onClick={() => setSelectedProduct(null)}>Back to Products</button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"similar-products-container\">\r\n                        <h3>Similar Products</h3>\r\n                        <div className=\"similar-products\">\r\n                            {products.filter(product => \r\n                                product.id.startsWith(selectedProduct.id.slice(0, selectedProduct.id.lastIndexOf(\"-\")))\r\n                                && product.id !== selectedProduct.id\r\n                            )\r\n                            .map(similarProduct => (\r\n                                <div \r\n                                    key={similarProduct.id} \r\n                                    className=\"similar-product-item\" \r\n                                    onClick={() => {\r\n                                        setSelectedProduct(similarProduct);\r\n                                        window.scrollTo(0, 0); // Scroll to the top of the page\r\n                                    }}\r\n                                >\r\n                                    <img src={`/images/${similarProduct.id}.jpg`} alt={similarProduct.name} className=\"similar-product-image\" />\r\n                                    <div>{similarProduct.name} - {similarProduct.price} AED</div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h1>Products</h1>\r\n                    <div className=\"products-grid\">\r\n                        {filteredProducts.map((product, index) => (\r\n                            <div key={index} className=\"product-item\">\r\n                                <img src={`/images/${product.id}.jpg`} alt={product.name} className=\"product-image\" />\r\n                                {product.quantity == 0 && (\r\n                                    <p className=\"out-of-stock-message\">OUT OF STOCK</p>\r\n                                )}\r\n                                <h2 className=\"product-title\">{product.name} - {product.price} AED</h2>\r\n                                <p>{product.description}</p>\r\n                                <div className=\"average-rating\">\r\n                                    Average Rating: {product.averageRating.toFixed(1)}\r\n                                </div>\r\n                                <button \r\n                                    className=\"view-details-button\" \r\n                                    onClick={() => setSelectedProduct(product)}\r\n                                >\r\n                                    View Details\r\n                                </button>\r\n                                <button \r\n                                    className={`add-to-cart-button ${product.quantity == 0 || isAddToCartDisabled(product) ? 'disabled' : ''}`}\r\n                                    onClick={() => addItemToCart({\r\n                                        id: product.id,\r\n                                        title: product.name,\r\n                                        price: product.price,\r\n                                        quantity: 1\r\n                                    })}\r\n                                    disabled={product.quantity == 0 || isAddToCartDisabled(product)}\r\n                                >\r\n                                    Add to Cart\r\n                                </button>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}