{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smiley\\\\Documents\\\\GitHub\\\\website_testing\\\\client\\\\src\\\\components\\\\SearchBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './SearchBar.css'; // Assuming you'll create a CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = ({\n  onSearch\n}) => {\n  _s();\n  const [query, setQuery] = useState('');\n  const handleInputChange = e => {\n    setQuery(e.target.value);\n    // Optionally, you can call onSearch here if you want to search as the user types\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSearch(query);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"search-bar\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: handleInputChange,\n      placeholder: \"Search for items...\",\n      className: \"search-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"search-button\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"qO/HZodsWTfJhuzZtdaxiosei2U=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SearchBar","onSearch","_s","query","setQuery","handleInputChange","e","target","value","handleSubmit","preventDefault","onSubmit","className","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Smiley/Documents/GitHub/website_testing/client/src/components/SearchBar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './SearchBar.css'; // Assuming you'll create a CSS file for styling\r\n\r\nconst SearchBar = ({ onSearch }) => {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setQuery(e.target.value);\r\n    // Optionally, you can call onSearch here if you want to search as the user types\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSearch(query);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"search-bar\">\r\n      <input\r\n        type=\"text\"\r\n        value={query}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Search for items...\"\r\n        className=\"search-input\"\r\n      />\r\n      <button type=\"submit\" className=\"search-button\">Search</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,iBAAiB,GAAIC,CAAC,IAAK;IAC/BF,QAAQ,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,MAAMC,YAAY,GAAIH,CAAC,IAAK;IAC1BA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClBT,QAAQ,CAACE,KAAK,CAAC;EACjB,CAAC;EAED,oBACEJ,OAAA;IAAMY,QAAQ,EAAEF,YAAa;IAACG,SAAS,EAAC,YAAY;IAAAC,QAAA,gBAClDd,OAAA;MACEe,IAAI,EAAC,MAAM;MACXN,KAAK,EAAEL,KAAM;MACbY,QAAQ,EAAEV,iBAAkB;MAC5BW,WAAW,EAAC,qBAAqB;MACjCJ,SAAS,EAAC;IAAc;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACFrB,OAAA;MAAQe,IAAI,EAAC,QAAQ;MAACF,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEX,CAAC;AAAClB,EAAA,CAzBIF,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AA2Bf,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}