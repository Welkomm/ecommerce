{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smiley\\\\Documents\\\\GitHub\\\\website_testing\\\\client\\\\src\\\\components\\\\Profile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Profile.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // Retrieve user information from localStorage directly within the component\n  const [username, setUsername] = useState(localStorage.getItem('username'));\n  const [password, setPassword] = useState(localStorage.getItem('password'));\n  const [email, setEmail] = useState(localStorage.getItem('email'));\n  const [phoneNumber, setPhoneNumber] = useState(localStorage.getItem('phoneNumber'));\n  const [firstName, setFirstName] = useState(localStorage.getItem('firstName'));\n  const [lastName, setLastName] = useState(localStorage.getItem('lastName'));\n  const [editMode, setEditMode] = useState(false);\n  const handleSignOut = () => {\n    // Clear user information from localStorage\n    localStorage.clear();\n    // Redirect to the login page\n    navigate('/login');\n  };\n  const handleProfileUpdate = async () => {\n    const updatedInfo = {\n      originalUsername: localStorage.getItem('username'),\n      // Use the original username to identify the user in the backend\n      newUsername: username,\n      newPassword: password,\n      // Be cautious with handling passwords, especially in production\n      email,\n      phoneNumber,\n      firstName,\n      lastName\n    };\n    const response = await fetch('http://localhost:3000/updateProfile', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedInfo)\n    });\n    const data = await response.json();\n    if (data.success) {\n      // Update localStorage with new user info if the server confirms success\n      // Assuming the server response includes all updated fields\n      localStorage.setItem('username', username); // Username is already being updated correctly\n\n      // Ensure these fields are updated based on the server's response\n      // The following lines assume your server response includes these fields\n      // If the server doesn't return the updated values, you'll need to adjust it accordingly\n      localStorage.setItem('email', email);\n      localStorage.setItem('phoneNumber', phoneNumber);\n      localStorage.setItem('firstName', firstName);\n      localStorage.setItem('lastName', lastName);\n\n      // Note: Updating password in localStorage is generally not recommended for security reasons\n      // Consider handling authentication and session management without storing passwords in localStorage\n\n      alert('Profile updated successfully');\n      setEditMode(false);\n    } else {\n      alert('Failed to update profile. ' + data.message);\n    }\n  };\n  const handleDeleteAccount = async () => {\n    // Confirmation dialog\n    const isConfirmed = window.confirm(\"Are you sure you want to delete your account? This action cannot be undone.\");\n    if (!isConfirmed) {\n      return; // Stop the function if the user cancels\n    }\n\n    // Proceed with the deletion logic if confirmed\n    const username = localStorage.getItem('username'); // Get the username from localStorage\n\n    const response = await fetch('http://localhost:3000/deleteAccount', {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username\n      })\n    });\n    const data = await response.json();\n    if (data.success) {\n      localStorage.clear(); // Clear all local storage\n      alert('Account deleted successfully');\n      navigate('/login'); // Redirect to login page or home page\n    } else {\n      alert('Failed to delete account. ' + data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Phone Number:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: phoneNumber,\n        onChange: e => setPhoneNumber(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"First Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: firstName,\n        onChange: e => setFirstName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Last Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: lastName,\n        onChange: e => setLastName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleProfileUpdate,\n        className: \"profile-save-button\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditMode(false),\n        className: \"cancel-edit-button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 14\n        }, this), \" \", username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 14\n        }, this), \" \", email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Phone Number:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 14\n        }, this), \" \", phoneNumber]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"First Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 14\n        }, this), \" \", firstName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Last Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 14\n        }, this), \" \", lastName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSignOut,\n        className: \"profile-sign-out-button\",\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setEditMode(true),\n        className: \"edit-profile-button\",\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDeleteAccount,\n        className: \"delete-account-button\",\n        children: \"Delete My Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"jI3pKYV/H1On+BGHNNUuahsfJ04=\", false, function () {\n  return [useNavigate];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Profile","_s","navigate","username","setUsername","localStorage","getItem","password","setPassword","email","setEmail","phoneNumber","setPhoneNumber","firstName","setFirstName","lastName","setLastName","editMode","setEditMode","handleSignOut","clear","handleProfileUpdate","updatedInfo","originalUsername","newUsername","newPassword","response","fetch","method","headers","body","JSON","stringify","data","json","success","setItem","alert","message","handleDeleteAccount","isConfirmed","window","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Smiley/Documents/GitHub/website_testing/client/src/components/Profile.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Profile.css';\n\nconst Profile = () => {\n  const navigate = useNavigate();\n\n  // Retrieve user information from localStorage directly within the component\n  const [username, setUsername] = useState(localStorage.getItem('username'));\n  const [password, setPassword] = useState(localStorage.getItem('password'));\n  const [email, setEmail] = useState(localStorage.getItem('email'));\n  const [phoneNumber, setPhoneNumber] = useState(localStorage.getItem('phoneNumber'));\n  const [firstName, setFirstName] = useState(localStorage.getItem('firstName'));\n  const [lastName, setLastName] = useState(localStorage.getItem('lastName'));\n\n  const [editMode, setEditMode] = useState(false);\n\n  const handleSignOut = () => {\n    // Clear user information from localStorage\n    localStorage.clear();\n    // Redirect to the login page\n    navigate('/login');\n  };\n\n  const handleProfileUpdate = async () => {\n    const updatedInfo = {\n      originalUsername: localStorage.getItem('username'), // Use the original username to identify the user in the backend\n      newUsername: username,\n      newPassword: password, // Be cautious with handling passwords, especially in production\n      email,\n      phoneNumber,\n      firstName,\n      lastName,\n    };\n\n    const response = await fetch('http://localhost:3000/updateProfile', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(updatedInfo),\n    });\n\n    const data = await response.json();\n    if (data.success) {\n      // Update localStorage with new user info if the server confirms success\n      // Assuming the server response includes all updated fields\n      localStorage.setItem('username', username); // Username is already being updated correctly\n\n      // Ensure these fields are updated based on the server's response\n      // The following lines assume your server response includes these fields\n      // If the server doesn't return the updated values, you'll need to adjust it accordingly\n      localStorage.setItem('email', email);\n      localStorage.setItem('phoneNumber', phoneNumber);\n      localStorage.setItem('firstName', firstName);\n      localStorage.setItem('lastName', lastName);\n\n      // Note: Updating password in localStorage is generally not recommended for security reasons\n      // Consider handling authentication and session management without storing passwords in localStorage\n\n      alert('Profile updated successfully');\n      setEditMode(false);\n    } else {\n      alert('Failed to update profile. ' + data.message);\n    }\n  };\n\n  const handleDeleteAccount = async () => {\n    // Confirmation dialog\n    const isConfirmed = window.confirm(\"Are you sure you want to delete your account? This action cannot be undone.\");\n    if (!isConfirmed) {\n        return; // Stop the function if the user cancels\n    }\n\n    // Proceed with the deletion logic if confirmed\n    const username = localStorage.getItem('username'); // Get the username from localStorage\n\n    const response = await fetch('http://localhost:3000/deleteAccount', {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username }),\n    });\n\n    const data = await response.json();\n    if (data.success) {\n        localStorage.clear(); // Clear all local storage\n        alert('Account deleted successfully');\n        navigate('/login'); // Redirect to login page or home page\n    } else {\n        alert('Failed to delete account. ' + data.message);\n    }\n  };\n\n  return (\n    <div className=\"profile-container\">\n      <h1>User Profile</h1>\n      {editMode ? (\n        <>\n          <label>Username:</label>\n          <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} />\n          <label>Password:</label>\n          <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n          <label>Email:</label>\n          <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n          <label>Phone Number:</label>\n          <input type=\"text\" value={phoneNumber} onChange={(e) => setPhoneNumber(e.target.value)} />\n          <label>First Name:</label>\n          <input type=\"text\" value={firstName} onChange={(e) => setFirstName(e.target.value)} />\n          <label>Last Name:</label>\n          <input type=\"text\" value={lastName} onChange={(e) => setLastName(e.target.value)} />\n          <button onClick={handleProfileUpdate} className=\"profile-save-button\">Save</button>\n          <button onClick={() => setEditMode(false)} className=\"cancel-edit-button\">Cancel</button>\n        </>\n      ) : (\n        <>\n          <p><strong>Username:</strong> {username}</p>\n          <p><strong>Email:</strong> {email}</p>\n          <p><strong>Phone Number:</strong> {phoneNumber}</p>\n          <p><strong>First Name:</strong> {firstName}</p>\n          <p><strong>Last Name:</strong> {lastName}</p>\n          <button onClick={handleSignOut} className=\"profile-sign-out-button\">Sign Out</button>\n          <button onClick={() => setEditMode(true)} className=\"edit-profile-button\">Edit Profile</button>\n          <button onClick={handleDeleteAccount} className=\"delete-account-button\">Delete My Account</button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Profile;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}