{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smiley\\\\Documents\\\\GitHub\\\\website_testing\\\\client\\\\src\\\\components\\\\ProductList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport SearchBar from './SearchBar'; // Ensure this path matches your file structure\nimport './ProductList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductList = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Function to handle search from the SearchBar\n  const handleSearch = query => {\n    // Navigate to the same page but with the new search query\n    navigate(`?search=${encodeURIComponent(query)}`);\n  };\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const searchQuery = queryParams.get('search');\n    const section = queryParams.get('section'); // Get the section parameter from the URL\n\n    const fetchAndFilterProducts = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/products');\n        const data = await response.json();\n        let fetchedProducts = Array.isArray(data) ? data : data.products || [];\n\n        // Filter by section if it's specified in the URL\n        if (section) {\n          fetchedProducts = fetchedProducts.filter(product => product.id.startsWith(section));\n        }\n\n        // Existing search filtering logic\n        if (searchQuery) {\n          const lowerCaseQuery = searchQuery.toLowerCase();\n          fetchedProducts = fetchedProducts.filter(product => product.id.toLowerCase().includes(lowerCaseQuery) || product.name.toLowerCase().includes(lowerCaseQuery) || product.description.toLowerCase().includes(lowerCaseQuery));\n        }\n        setProducts(fetchedProducts);\n        setFilteredProducts(fetchedProducts);\n      } catch (error) {\n        console.error(\"Error fetching products:\", error);\n      }\n    };\n    fetchAndFilterProducts();\n  }, [location]); // React to changes in location, including the search query\n\n  const addItemToCart = async product => {\n    const username = localStorage.getItem(\"username\");\n    const response = await fetch('http://localhost:3000/addToCart', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        item: product\n      })\n    });\n    const data = await response.json();\n    if (data.success) {\n      alert('Item added to cart successfully');\n    } else {\n      alert('Failed to add item to cart');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products-list\",\n      children: products.map((product, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-item\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductList, \"ZG2SZlbzSDjEyT8/xemSYQikNAA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","SearchBar","jsxDEV","_jsxDEV","ProductList","_s","products","setProducts","navigate","location","handleSearch","query","encodeURIComponent","queryParams","URLSearchParams","search","searchQuery","get","section","fetchAndFilterProducts","response","fetch","data","json","fetchedProducts","Array","isArray","filter","product","id","startsWith","lowerCaseQuery","toLowerCase","includes","name","description","setFilteredProducts","error","console","addItemToCart","username","localStorage","getItem","method","headers","body","JSON","stringify","item","success","alert","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","_c","$RefreshReg$"],"sources":["C:/Users/Smiley/Documents/GitHub/website_testing/client/src/components/ProductList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport SearchBar from './SearchBar'; // Ensure this path matches your file structure\r\nimport './ProductList.css';\r\n\r\nconst ProductList = () => {\r\n    const [products, setProducts] = useState([]);\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    // Function to handle search from the SearchBar\r\n    const handleSearch = (query) => {\r\n        // Navigate to the same page but with the new search query\r\n        navigate(`?search=${encodeURIComponent(query)}`);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const queryParams = new URLSearchParams(location.search);\r\n        const searchQuery = queryParams.get('search');\r\n        const section = queryParams.get('section'); // Get the section parameter from the URL\r\n\r\n        const fetchAndFilterProducts = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:3000/products');\r\n                const data = await response.json();\r\n                let fetchedProducts = Array.isArray(data) ? data : data.products || [];\r\n\r\n                // Filter by section if it's specified in the URL\r\n                if (section) {\r\n                    fetchedProducts = fetchedProducts.filter(product => product.id.startsWith(section));\r\n                }\r\n\r\n                // Existing search filtering logic\r\n                if (searchQuery) {\r\n                    const lowerCaseQuery = searchQuery.toLowerCase();\r\n                    fetchedProducts = fetchedProducts.filter(product =>\r\n                        product.id.toLowerCase().includes(lowerCaseQuery) ||\r\n                        product.name.toLowerCase().includes(lowerCaseQuery) ||\r\n                        product.description.toLowerCase().includes(lowerCaseQuery)\r\n                    );\r\n                }\r\n\r\n                setProducts(fetchedProducts);\r\n                setFilteredProducts(fetchedProducts);\r\n            } catch (error) {\r\n                console.error(\"Error fetching products:\", error);\r\n            }\r\n        };\r\n\r\n        fetchAndFilterProducts();\r\n    }, [location]); // React to changes in location, including the search query\r\n\r\n    const addItemToCart = async (product) => {\r\n        const username = localStorage.getItem(\"username\");\r\n        const response = await fetch('http://localhost:3000/addToCart', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ username, item: product }),\r\n        });\r\n        const data = await response.json();\r\n        if (data.success) {\r\n            alert('Item added to cart successfully');\r\n        } else {\r\n            alert('Failed to add item to cart');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <SearchBar onSearch={handleSearch} />\r\n            <div className=\"products-list\">\r\n                {products.map((product, index) => (\r\n                    <div key={index} className=\"product-item\">\r\n                        {/* Render your product details here */}\r\n                        <p>{product.name}</p>\r\n                        {/* Add more product details as needed */}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}