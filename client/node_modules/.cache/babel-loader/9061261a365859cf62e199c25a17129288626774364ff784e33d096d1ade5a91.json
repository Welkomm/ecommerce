{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smiley\\\\Documents\\\\GitHub\\\\website_testing\\\\client\\\\src\\\\components\\\\Cart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Cart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = () => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  useEffect(() => {\n    const username = localStorage.getItem(\"username\");\n    if (username) {\n      fetch(`http://localhost:3000/cart/${username}`).then(response => response.json()).then(data => {\n        setCartItems(data);\n      }).catch(error => {\n        console.error(\"Error fetching cart items:\", error);\n      });\n    }\n  }, []);\n  const incrementQuantity = itemId => {\n    // Find the item in the cartItems array\n    const updatedCartItems = cartItems.map(item => {\n      if (item.id === itemId) {\n        return {\n          ...item,\n          quantity: item.quantity + 1\n        };\n      }\n      return item;\n    });\n\n    // Update the cartItems state\n    setCartItems(updatedCartItems);\n\n    // Optionally, sync with the server here\n    updateQuantityOnServer(itemId, 'increment');\n  };\n  const decrementQuantity = itemId => {\n    // Find the item in the cartItems array and decrement its quantity, but not below 1\n    const updatedCartItems = cartItems.map(item => {\n      if (item.id === itemId && item.quantity > 1) {\n        return {\n          ...item,\n          quantity: item.quantity - 1\n        };\n      }\n      return item;\n    });\n\n    // Update the cartItems state\n    setCartItems(updatedCartItems);\n\n    // Optionally, sync with the server here\n    updateQuantityOnServer(itemId, 'decrement');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-items\",\n      children: cartItems.length > 0 ? cartItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: $\", item.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quantity-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => decrementQuantity(item.id),\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => incrementQuantity(item.id),\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your cart is empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-actions\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"cart-button\",\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/payment\",\n        className: \"cart-button\",\n        children: \"Proceed to Checkout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Cart, \"yMyLm0mTOdUD4xRL2vnEhQFbjeY=\");\n_c = Cart;\nconst updateQuantityOnServer = async (itemId, action) => {\n  const username = localStorage.getItem(\"username\");\n  const endpoint = `http://localhost:3000/cart/${action}`;\n  try {\n    await fetch(endpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        itemId\n      })\n    });\n    // Assuming the server responds with the updated cart, you might want to re-fetch the cart items here\n    fetchCartItems();\n  } catch (error) {\n    console.error(\"Error updating cart item quantity on server:\", error);\n  }\n};\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Cart","_s","cartItems","setCartItems","username","localStorage","getItem","fetch","then","response","json","data","catch","error","console","incrementQuantity","itemId","updatedCartItems","map","item","id","quantity","updateQuantityOnServer","decrementQuantity","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","index","title","price","onClick","to","_c","action","endpoint","method","headers","body","JSON","stringify","fetchCartItems","$RefreshReg$"],"sources":["C:/Users/Smiley/Documents/GitHub/website_testing/client/src/components/Cart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Cart.css';\r\n\r\nconst Cart = () => {\r\n    const [cartItems, setCartItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const username = localStorage.getItem(\"username\");\r\n        if (username) {\r\n            fetch(`http://localhost:3000/cart/${username}`)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    setCartItems(data);\r\n                })\r\n                .catch(error => {\r\n                    console.error(\"Error fetching cart items:\", error);\r\n                });\r\n        }\r\n    }, []);\r\n    \r\n\r\n    const incrementQuantity = (itemId) => {\r\n        // Find the item in the cartItems array\r\n        const updatedCartItems = cartItems.map(item => {\r\n            if (item.id === itemId) {\r\n                return { ...item, quantity: item.quantity + 1 };\r\n            }\r\n            return item;\r\n        });\r\n\r\n        // Update the cartItems state\r\n        setCartItems(updatedCartItems);\r\n\r\n        // Optionally, sync with the server here\r\n        updateQuantityOnServer(itemId, 'increment');\r\n    };\r\n\r\n    const decrementQuantity = (itemId) => {\r\n        // Find the item in the cartItems array and decrement its quantity, but not below 1\r\n        const updatedCartItems = cartItems.map(item => {\r\n            if (item.id === itemId && item.quantity > 1) {\r\n                return { ...item, quantity: item.quantity - 1 };\r\n            }\r\n            return item;\r\n        });\r\n\r\n        // Update the cartItems state\r\n        setCartItems(updatedCartItems);\r\n\r\n        // Optionally, sync with the server here\r\n        updateQuantityOnServer(itemId, 'decrement');\r\n    };\r\n\r\n    return (\r\n        <div className=\"cart-container\">\r\n            <h1>Your Cart</h1>\r\n            <div className=\"cart-items\">\r\n                {cartItems.length > 0 ? (\r\n                    cartItems.map((item, index) => (\r\n                        <div key={index} className=\"cart-item\">\r\n                            <h2>{item.title}</h2>\r\n                            <p>Price: ${item.price}</p>\r\n                            <div className=\"quantity-controls\">\r\n                                <button onClick={() => decrementQuantity(item.id)}>-</button>\r\n                                <p>{item.quantity}</p>\r\n                                <button onClick={() => incrementQuantity(item.id)}>+</button>\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>Your cart is empty.</p>\r\n                )}\r\n            </div>\r\n            <div className=\"cart-actions\">\r\n                <Link to=\"/\" className=\"cart-button\">Back to Home</Link>\r\n                <Link to=\"/payment\" className=\"cart-button\">Proceed to Checkout</Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst updateQuantityOnServer = async (itemId, action) => {\r\n    const username = localStorage.getItem(\"username\");\r\n    const endpoint = `http://localhost:3000/cart/${action}`;\r\n    try {\r\n        await fetch(endpoint, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ username, itemId }),\r\n        });\r\n        // Assuming the server responds with the updated cart, you might want to re-fetch the cart items here\r\n        fetchCartItems();\r\n    } catch (error) {\r\n        console.error(\"Error updating cart item quantity on server:\", error);\r\n    }\r\n};\r\nexport default Cart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}