{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Smiley\\\\Documents\\\\GitHub\\\\website_testing\\\\client\\\\src\\\\components\\\\Orders.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Orders.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Orders = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [productNames, setProductNames] = useState({});\n  useEffect(() => {\n    // Fetch product names and create a mapping of IDs to names\n    const fetchProductNames = async () => {\n      try {\n        const response = await fetch('http://localhost:3000/products');\n        const text = await response.text();\n        const lines = text.trim().split('\\n');\n        const names = {};\n        for (let i = 0; i < lines.length; i += 2) {\n          const details = lines[i].split('\\t');\n          if (details.length >= 2) {\n            const id = details[0];\n            const name = details[1];\n            names[id] = name;\n          }\n        }\n        return names;\n      } catch (error) {\n        console.error(\"Error fetching product names:\", error);\n        return {};\n      }\n    };\n    const fetchOrders = async () => {\n      const username = localStorage.getItem(\"username\");\n      if (username) {\n        try {\n          const response = await fetch(`http://localhost:3000/orders/${username}`);\n          const data = await response.json();\n          if (data.orders && Array.isArray(data.orders)) {\n            // Fetch product names only after confirming there are orders\n            const names = await fetchProductNames();\n            setProductNames(names);\n            // Update orders with additional product name information\n            const updatedOrders = data.orders.map(order => ({\n              ...order,\n              products: order.products.map(product => ({\n                ...product,\n                name: names[product.id] || 'Unknown Product'\n              }))\n            }));\n            setOrders(updatedOrders);\n          } else {\n            console.error(\"Unexpected response format:\", data);\n            setOrders([]);\n          }\n        } catch (error) {\n          console.error(\"Error fetching orders:\", error);\n          setOrders([]);\n        }\n      }\n    };\n    fetchOrders();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"orders-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), orders.length > 0 ? orders.map((order, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"order-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Order ID: \", order.orderID]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Order Date: \", order.orderDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", order.orderStatus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Products:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: order.products.map(product => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/products?search=${product.id}`,\n            children: [product.name, \" (\", product.id, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 37\n          }, this)\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No orders found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(Orders, \"pHdSStnaLXcULTyUFaSvT9U34CM=\");\n_c = Orders;\nexport default Orders;\nvar _c;\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Orders","_s","orders","setOrders","productNames","setProductNames","fetchProductNames","response","fetch","text","lines","trim","split","names","i","length","details","id","name","error","console","fetchOrders","username","localStorage","getItem","data","json","Array","isArray","updatedOrders","map","order","products","product","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","orderID","orderDate","orderStatus","to","_c","$RefreshReg$"],"sources":["C:/Users/Smiley/Documents/GitHub/website_testing/client/src/components/Orders.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './Orders.css';\n\nconst Orders = () => {\n    const [orders, setOrders] = useState([]);\n    const [productNames, setProductNames] = useState({});\n\n    useEffect(() => {\n        // Fetch product names and create a mapping of IDs to names\n        const fetchProductNames = async () => {\n            try {\n                const response = await fetch('http://localhost:3000/products');\n                const text = await response.text();\n                const lines = text.trim().split('\\n');\n                const names = {};\n                for (let i = 0; i < lines.length; i += 2) {\n                    const details = lines[i].split('\\t');\n                    if (details.length >= 2) {\n                        const id = details[0];\n                        const name = details[1];\n                        names[id] = name;\n                    }\n                }\n                return names;\n            } catch (error) {\n                console.error(\"Error fetching product names:\", error);\n                return {};\n            }\n        };\n\n        const fetchOrders = async () => {\n            const username = localStorage.getItem(\"username\");\n            if (username) {\n                try {\n                    const response = await fetch(`http://localhost:3000/orders/${username}`);\n                    const data = await response.json();\n                    if (data.orders && Array.isArray(data.orders)) {\n                        // Fetch product names only after confirming there are orders\n                        const names = await fetchProductNames();\n                        setProductNames(names);\n                        // Update orders with additional product name information\n                        const updatedOrders = data.orders.map(order => ({\n                            ...order,\n                            products: order.products.map(product => ({\n                                ...product,\n                                name: names[product.id] || 'Unknown Product'\n                            }))\n                        }));\n                        setOrders(updatedOrders);\n                    } else {\n                        console.error(\"Unexpected response format:\", data);\n                        setOrders([]);\n                    }\n                } catch (error) {\n                    console.error(\"Error fetching orders:\", error);\n                    setOrders([]);\n                }\n            }\n        };\n\n        fetchOrders();\n    }, []);\n\n    return (\n        <div className=\"orders-container\">\n            <h1>Your Orders</h1>\n            {orders.length > 0 ? (\n                orders.map((order, index) => (\n                    <div key={index} className=\"order-item\">\n                        <h2>Order ID: {order.orderID}</h2>\n                        <p>Order Date: {order.orderDate}</p>\n                        <p>Status: {order.orderStatus}</p>\n                        <p>Products:</p>\n                        <ul>\n                            {order.products.map(product => (\n                                <li key={product.id}>\n                                    <Link to={`/products?search=${product.id}`}>{product.name} ({product.id})</Link>\n                                </li>\n                            ))}\n                        </ul>\n                    </div>\n                ))\n            ) : (\n                <p>No orders found.</p>\n            )}\n        </div>\n    );\n};\n\nexport default Orders;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}