{"ast":null,"code":"var _jsxFileName = \"/Users/saifalafeefi/Documents/GitHub/website_testing/client/src/components/ProductList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductList = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n\n  // Fetch products from the server\n  useEffect(() => {\n    fetch('http://localhost:3000/products').then(response => response.json()).then(data => {\n      if (data.success) {\n        setProducts(data.products);\n      } else {\n        alert('Failed to fetch products');\n      }\n    }).catch(error => {\n      console.error(\"Error fetching products:\", error);\n      alert('Failed to fetch products');\n    });\n  }, []);\n\n  // Function to add an item to the cart\n  const addItemToCart = async item => {\n    const username = localStorage.getItem(\"username\"); // Retrieve the username from localStorage\n    const response = await fetch('http://localhost:3000/addToCart', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        item\n      })\n    });\n    const data = await response.json();\n    if (data.success) {\n      alert('Item added to cart successfully');\n    } else {\n      alert('Failed to add item to cart');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: products.map((product, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [product.name, \" - $\", product.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: product.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addItemToCart({\n            id: product.id,\n            title: product.name,\n            price: product.price,\n            quantity: 1 // Assuming a default quantity of 1 for simplicity\n          }),\n          children: \"Add to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductList, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ProductList","_s","products","setProducts","fetch","then","response","json","data","success","alert","catch","error","console","addItemToCart","item","username","localStorage","getItem","method","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","map","product","index","name","price","description","onClick","id","title","quantity","_c","$RefreshReg$"],"sources":["/Users/saifalafeefi/Documents/GitHub/website_testing/client/src/components/ProductList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ProductList = () => {\n    const [products, setProducts] = useState([]);\n\n    // Fetch products from the server\n    useEffect(() => {\n        fetch('http://localhost:3000/products')\n            .then(response => response.json())\n            .then(data => {\n                if (data.success) {\n                    setProducts(data.products);\n                } else {\n                    alert('Failed to fetch products');\n                }\n            })\n            .catch(error => {\n                console.error(\"Error fetching products:\", error);\n                alert('Failed to fetch products');\n            });\n    }, []);\n\n    // Function to add an item to the cart\n    const addItemToCart = async (item) => {\n        const username = localStorage.getItem(\"username\"); // Retrieve the username from localStorage\n        const response = await fetch('http://localhost:3000/addToCart', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ username, item }),\n        });\n        const data = await response.json();\n        if (data.success) {\n            alert('Item added to cart successfully');\n        } else {\n            alert('Failed to add item to cart');\n        }\n    };\n\n    return (\n        <div>\n            <h1>Products</h1>\n            <div>\n                {products.map((product, index) => (\n                    <div key={index}>\n                        <h2>{product.name} - ${product.price}</h2>\n                        <p>{product.description}</p>\n                        <button onClick={() => addItemToCart({\n                            id: product.id,\n                            title: product.name,\n                            price: product.price,\n                            quantity: 1 // Assuming a default quantity of 1 for simplicity\n                        })}>Add to Cart</button>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default ProductList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}